{
  "version": 3,
  "sources": ["../../../../../Modules/Store/Counterparties/CounterpartiesPage.ts", "../../../../../Modules/Store/Counterparties/CounterpartiesGrid.ts", "../../../../../Modules/Store/Counterparties/CounterpartiesDialog.ts"],
  "sourcesContent": ["\uFEFFimport { initFullHeightGridPage } from '@serenity-is/corelib/q';\r\nimport { CounterpartiesGrid } from './CounterpartiesGrid';\r\n\r\n$(function() {\r\n    initFullHeightGridPage(new CounterpartiesGrid($('#GridDiv')).element);\r\n});", "import { Decorators, EntityGrid } from '@serenity-is/corelib';\r\nimport { CounterpartiesColumns, CounterpartiesRow, CounterpartiesService } from '../../ServerTypes/Store';\r\nimport { CounterpartiesDialog } from './CounterpartiesDialog';\r\n\r\n@Decorators.registerClass('Company.Store.CounterpartiesGrid')\r\nexport class CounterpartiesGrid extends EntityGrid<CounterpartiesRow, any> {\r\n    protected getColumnsKey() { return CounterpartiesColumns.columnsKey; }\r\n    protected getDialogType() { return CounterpartiesDialog; }\r\n    protected getIdProperty() { return CounterpartiesRow.idProperty; }\r\n    protected getInsertPermission() { return CounterpartiesRow.insertPermission; }\r\n    protected getLocalTextPrefix() { return CounterpartiesRow.localTextPrefix; }\r\n    protected getService() { return CounterpartiesService.baseUrl; }\r\n\r\n    constructor(container: JQuery) {\r\n        super(container);\r\n    }\r\n\r\n    //getButtons() {\r\n    //    var buttons = super.getButtons();\r\n\r\n    //    buttons.push(Common.ExcelExportHelper.createToolButton({\r\n    //        grid: this,\r\n    //        onViewSubmit: () => this.onViewSubmit(),\r\n    //        service: 'Store/Counterparties/ListExcel',\r\n    //        separator: true\r\n    //    }));\r\n\r\n    //    buttons.push(Common.PdfExportHelper.createToolButton({\r\n    //        grid: this,\r\n    //        onViewSubmit: () => this.onViewSubmit()\r\n    //    }));\r\n\r\n    //    return buttons\r\n    //}\r\n}", "import { Decorators, EntityDialog } from '@serenity-is/corelib';\nimport { htmlEncode, reloadLookup, localText } from \"@serenity-is/corelib/q\";\r\nimport { DialogUtils } from \"@serenity-is/extensions\";\r\nimport { CounterpartiesForm, CounterpartiesRow, CounterpartiesService } from '../../ServerTypes/Store';\nimport { CounterpartiesGrid } from \"./CounterpartiesGrid\"\r\n\r\n@Decorators.registerClass('Company.Store.CounterpartiesDialog')\n@Decorators.panel()\r\nexport class CounterpartiesDialog extends EntityDialog<CounterpartiesRow, any> {\r\n    protected getFormKey() { return CounterpartiesForm.formKey; }\r\n    protected getIdProperty() { return CounterpartiesRow.idProperty; }\r\n    protected getLocalTextPrefix() { return CounterpartiesRow.localTextPrefix; }\r\n    protected getNameProperty() { return CounterpartiesRow.nameProperty; }\r\n    protected getService() { return CounterpartiesService.baseUrl; }\r\n    protected getDeletePermission() { return CounterpartiesRow.deletePermission; }\r\n    protected getInsertPermission() { return CounterpartiesRow.insertPermission; }\r\n    protected getUpdatePermission() { return CounterpartiesRow.updatePermission; }\r\n\r\n    protected form = new CounterpartiesForm(this.idPrefix);\n\n    //private ProductMoveGrid: CounterpartiesProductMovementGrid;\r\n    //private WaresMoveGrid: CounterpartiesWaresMovementGrid;\r\n    private loadedState: string;\n\n    constructor() {\n        super();\n\n        //this.ProductMoveGrid = new CounterpartiesProductMovementGrid(this.byId('ProductMovementGrid'));\r\n        //this.WaresMoveGrid = new CounterpartiesWaresMovementGrid(this.byId('WaresMovementGrid'));\r\n        /// force order dialog to open in Dialog mode instead of Panel mode\r\n        /// which is set as default on OrderDialog with @panelAttribute\r\n        //this.ProductMoveGrid.openDialogsAsPanel = false;\r\n        //this.WaresMoveGrid.openDialogsAsPanel = false;\r\n\r\n        this.byId('NotesList').closest('.field').hide().end().appendTo(this.byId('TabNotes'));\r\n        DialogUtils.pendingChangesConfirmation(this.element, () => this.getSaveState() != this.loadedState);\r\n    }\n\n    getSaveState() {\r\n        try {\r\n            return $.toJSON(this.getSaveEntity());\r\n        }\r\n        catch (e) {\r\n            return null;\r\n        }\r\n    }\n\n    loadResponse(data) {\r\n        super.loadResponse(data);\r\n        this.loadedState = this.getSaveState();\r\n    }\r\n\r\n    loadEntity(entity: CounterpartiesRow) {\r\n        super.loadEntity(entity);\r\n\r\n        //Serenity.TabsExtensions.setDisabled(this.tabs, 'Product Movement', this.isNewOrDeleted());\r\n        //Serenity.TabsExtensions.setDisabled(this.tabs, 'Wares Movement', this.isNewOrDeleted());\r\n\r\n        //this.ProductMoveGrid.counterpartyId = entity.CounterpartyId;\r\n        //this.WaresMoveGrid.counterpartyId = entity.CounterpartyId;\r\n    }\r\n\r\n    onSaveSuccess(response) {\r\n        super.onSaveSuccess(response);\r\n\r\n        reloadLookup('Store.Counterparties');\r\n    }\n\n    getTemplate() {\n        return `<div id=\"~_Tabs\" class=\"s-DialogContent\">\n    <ul>\n        <li><a href=\"#~_TabInfo\"><span>{{text:\"Db.Store.Counterparties.EntitySingular\"}}</span></a></li>\r\n        <li><a href=\"#~_TabNotes\"><span>{{text:\"Db.Store.Notes.EntityPlural\"}}</span></a></li>\n    </ul>\n    <div id=\"~_TabInfo\" class=\"tab-pane s-TabInfo\">\r\n        <div id=\"~_Toolbar\" class=\"s-DialogToolbar\">\r\n        </div>\r\n        <div class=\"s-Form\">\r\n            <form id=\"~_Form\" action=\"\">\r\n                <div class=\"fieldset ui-widget ui-widget-content ui-corner-all\">\r\n                    <div id=\"~_PropertyGrid\"></div>\r\n                    <div class=\"clear\"></div>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    </div>\n    <div id=\"~_TabNotes\" class=\"tab-pane s-TabNotes\">\r\n    </div>\n</div>`;\n\n    }\n\r\n}"],
  "mappings": "iNAAC,IAAAA,EAAuC,SCAxC,IAAAC,EAAuC,SCAvC,IAAAC,EAAyC,SACzCC,EAAoD,SACpDC,EAA4B,SAMrB,IAAMC,EAAN,cAAmC,cAAqC,CAgB3E,aAAc,CACV,MAAM,EAPV,KAAU,KAAO,IAAIC,EAAmB,KAAK,QAAQ,EAgBjD,KAAK,KAAK,WAAW,EAAE,QAAQ,QAAQ,EAAE,KAAK,EAAE,IAAI,EAAE,SAAS,KAAK,KAAK,UAAU,CAAC,EACpF,cAAY,2BAA2B,KAAK,QAAS,IAAM,KAAK,aAAa,GAAK,KAAK,WAAW,CACtG,CA3BU,YAAa,CAAE,OAAOA,EAAmB,OAAS,CAClD,eAAgB,CAAE,OAAOC,EAAkB,UAAY,CACvD,oBAAqB,CAAE,OAAOA,EAAkB,eAAiB,CACjE,iBAAkB,CAAE,OAAOA,EAAkB,YAAc,CAC3D,YAAa,CAAE,OAAOC,EAAsB,OAAS,CACrD,qBAAsB,CAAE,OAAOD,EAAkB,gBAAkB,CACnE,qBAAsB,CAAE,OAAOA,EAAkB,gBAAkB,CACnE,qBAAsB,CAAE,OAAOA,EAAkB,gBAAkB,CAsB7E,cAAe,CACX,GAAI,CACA,OAAO,EAAE,OAAO,KAAK,cAAc,CAAC,CACxC,OACOE,EAAP,CACI,OAAO,IACX,CACJ,CAEA,aAAaC,EAAM,CACf,MAAM,aAAaA,CAAI,EACvB,KAAK,YAAc,KAAK,aAAa,CACzC,CAEA,WAAWC,EAA2B,CAClC,MAAM,WAAWA,CAAM,CAO3B,CAEA,cAAcC,EAAU,CACpB,MAAM,cAAcA,CAAQ,KAE5B,gBAAa,sBAAsB,CACvC,CAEA,aAAc,CACV,MAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAqBX,CAEJ,EApFaC,EAAAR,EAAA,wBAAAA,EAANS,EAAA,CAFN,aAAW,cAAc,oCAAoC,EAC7D,aAAW,MAAM,GACLT,GDHN,IAAMU,EAAN,cAAiC,YAAmC,CAC7D,eAAgB,CAAE,OAAOC,EAAsB,UAAY,CAC3D,eAAgB,CAAE,OAAOC,CAAsB,CAC/C,eAAgB,CAAE,OAAOC,EAAkB,UAAY,CACvD,qBAAsB,CAAE,OAAOA,EAAkB,gBAAkB,CACnE,oBAAqB,CAAE,OAAOA,EAAkB,eAAiB,CACjE,YAAa,CAAE,OAAOC,EAAsB,OAAS,CAE/D,YAAYC,EAAmB,CAC3B,MAAMA,CAAS,CACnB,CAmBJ,EA7BaC,EAAAN,EAAA,sBAAAA,EAANO,EAAA,CADN,aAAW,cAAc,kCAAkC,GAC/CP,GDFb,EAAE,UAAW,IACT,0BAAuB,IAAIQ,EAAmB,EAAE,UAAU,CAAC,EAAE,OAAO,CACxE,CAAC",
  "names": ["import_q", "import_corelib", "import_corelib", "import_q", "import_extensions", "CounterpartiesDialog", "CounterpartiesForm", "CounterpartiesRow", "CounterpartiesService", "e", "data", "entity", "response", "__name", "__decorateClass", "CounterpartiesGrid", "CounterpartiesColumns", "CounterpartiesDialog", "CounterpartiesRow", "CounterpartiesService", "container", "__name", "__decorateClass", "CounterpartiesGrid"]
}
