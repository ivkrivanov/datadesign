{
  "version": 3,
  "sources": ["../../../../../Modules/Store/Order/OrderPage.ts", "../../../../../Modules/Store/Order/OrderGrid.ts", "../../../../../Modules/Store/Order/OrderDialog.ts"],
  "sourcesContent": ["\uFEFFimport { initFullHeightGridPage } from '@serenity-is/corelib/q';\r\nimport { OrderGrid } from './OrderGrid';\r\n\r\nexport default function pageInit() {\r\n    initFullHeightGridPage(new OrderGrid($('#GridDiv')).element);\r\n}", "import { Decorators, EntityGrid, EnumEditor, LookupEditor } from '@serenity-is/corelib';\nimport { toId } from '@serenity-is/corelib/q';\nimport { ExcelExportHelper, PdfExportHelper, ReportHelper } from \"@serenity-is/extensions\";\r\nimport { OrderColumns, OrderRow, OrderService, OrderListRequest, ProductsRow } from '../../ServerTypes/Store';\r\nimport { StoreAverageDialog } from \"../WaresOrder/StoreAverageDialog\";\nimport { OrderDialog } from './OrderDialog';\n\nconst fld = OrderRow.Fields;\r\n\r\n@Decorators.registerClass('Company.Store.OrderGrid')\n@Decorators.filterable()\r\nexport class OrderGrid extends EntityGrid<OrderRow, any> {\r\n    protected getColumnsKey() { return OrderColumns.columnsKey; }\r\n    protected getDialogType() { return OrderDialog; }\n    protected getIdProperty() { return OrderRow.idProperty; }\r\n    protected getInsertPermission() { return OrderRow.insertPermission; }\r\n    protected getLocalTextPrefix() { return OrderRow.localTextPrefix; }\r\n    protected getRowDefinition() { return OrderRow; }\r\n    protected getService() { return OrderService.baseUrl; }\n\n    protected shippingStateFilter: EnumEditor;\r\n\r\n    constructor(container: JQuery) {\r\n        super(container);\r\n    }\n\n    protected getQuickFilters() {\r\n\r\n        var filters = super.getQuickFilters();\r\n\r\n        filters.push({\r\n            type: LookupEditor,\r\n            options: {\r\n                lookupKey: ProductsRow.lookupKey\r\n            },\r\n            field: 'ProductId',\r\n            title: 'Contains Product in Details',\r\n            handler: p => {\r\n                (this.view.params as OrderListRequest).ProductId = toId(p.value);\r\n            },\r\n            cssClass: 'hidden-xs'\r\n        });\r\n\r\n        return filters;\r\n    }\n\n    protected createQuickFilters() {\r\n        super.createQuickFilters();\r\n\r\n        this.shippingStateFilter = this.findQuickFilter(EnumEditor, fld.ShippingState);\r\n    }\n\n    protected getButtons() {\r\n        var buttons = super.getButtons();\r\n\r\n        buttons.push(ExcelExportHelper.createToolButton({\r\n            grid: this,\r\n            service: OrderService.baseUrl + '/ListExcel',\r\n            onViewSubmit: () => this.onViewSubmit(),\r\n            separator: true\r\n        }));\r\n\r\n        buttons.push(PdfExportHelper.createToolButton({\r\n            grid: this,\r\n            onViewSubmit: () => this.onViewSubmit()\r\n        }));\r\n\r\n        buttons.push({\r\n            title: 'Warehouse',\r\n            cssClass: 'export-xlsx-button',\r\n            onClick: () => {\r\n                var dialog = new StoreAverageDialog();\r\n                dialog.element.on('dialogclose', () => {\r\n                    this.refresh();\r\n                    dialog = null;\r\n                });\r\n                dialog.dialogOpen();\r\n            }\r\n        });\r\n\r\n        return buttons;\r\n    }\n\n    protected getColumns() {\r\n        var columns = super.getColumns();\r\n\r\n        columns.splice(1, 0, {\n            id: 'Print Invoice',\r\n            field: null,\r\n            name: '',\n            cssClass: 'align-center',\r\n            format: ctx => '<a class=\"inline-action print-invoice\" title=\"invoice\">' +\r\n                '<i class=\"fa fa-file-pdf-o text-red\"></i></a>',\r\n            width: 24,\r\n            minWidth: 24,\r\n            maxWidth: 24\r\n        });\r\n\r\n        return columns;\r\n    }\n\n    protected onClick(e: JQueryEventObject, row: number, cell: number) {\r\n        super.onClick(e, row, cell);\r\n\r\n        if (e.isDefaultPrevented())\r\n            return;\r\n\r\n        var item = this.itemAt(row);\r\n        var target = $(e.target);\r\n\r\n        if (target.parent().hasClass('inline-action'))\r\n            target = target.parent();\r\n\r\n        if (target.hasClass('inline-action')) {\r\n            e.preventDefault();\r\n\r\n            if (target.hasClass('print-invoice')) {\r\n                ReportHelper.execute({\r\n                    reportKey: 'Store.ProductMovementDetails',\r\n                    params: {\r\n                        ProductMoveId: item.OrderId\r\n                    }\r\n                });\r\n            }\r\n        }\r\n    }\n\n\n\n    public set_shippingState(value: number): void {\r\n        this.shippingStateFilter.value = value == null ? '' : value.toString();\r\n    }\n\n    protected addButtonClick() {\r\n        var eq = this.view.params.EqualityFilter;\r\n        this.editItem(<OrderRow>{\r\n            CounterpartyId: eq ? eq.CounterpartyId : null\r\n        });\r\n    }\r\n}", "import { Decorators, EntityDialog } from '@serenity-is/corelib';\r\nimport { OrderForm, OrderRow, OrderService } from '../../ServerTypes/Store';\nimport { ReportHelper } from \"@serenity-is/extensions\";\r\n\r\n@Decorators.registerClass('Company.Store.OrderDialog')\r\nexport class OrderDialog extends EntityDialog<OrderRow, any> {\r\n    protected getFormKey() { return OrderForm.formKey; }\r\n    protected getRowDefinition() { return OrderRow; }\r\n    protected getService() { return OrderService.baseUrl; }\r\n\r\n    protected form = new OrderForm(this.idPrefix);\n\n    getToolbarButtons() {\n        var buttons = super.getToolbarButtons();\n\n        buttons.push(ReportHelper.createToolButton({\n            title: 'Invoice',\n            cssClass: 'export-pdf-button',\n            reportKey: 'Northwind.OrderDetail',\n            getParams: () => ({\n                OrderID: this.entityId\n            })\n        }));\n\n        return buttons;\n    }\n\n    protected updateInterface() {\n        super.updateInterface();\n\n        this.toolbar.findButton('export-pdf-button').toggle(this.isEditMode());\n    }\r\n}"],
  "mappings": "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",
  "names": ["import_q", "import_corelib", "import_q", "import_extensions", "import_corelib", "import_extensions", "OrderDialog", "OrderForm", "OrderRow", "OrderService", "buttons", "__name", "__decorateClass", "fld", "OrderRow", "OrderGrid", "container", "OrderColumns", "OrderDialog", "OrderService", "filters", "ProductsRow", "p", "buttons", "dialog", "StoreAverageDialog", "columns", "ctx", "row", "cell", "item", "target", "value", "eq", "__name", "__decorateClass", "pageInit", "OrderGrid", "__name"]
}
