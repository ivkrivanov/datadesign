{
  "version": 3,
  "sources": ["../../../../../Modules/Store/CategoriesType/CategoriesTypePage.ts", "../../../../../Modules/Store/CategoriesType/CategoriesTypeGrid.ts", "../../../../../Modules/Store/CategoriesType/CategoriesTypeDialog.ts"],
  "sourcesContent": ["\r\nimport { initFullHeightGridPage } from \"@serenity-is/corelib/q\"\r\nimport { CategoriesTypeGrid } from \"./CategoriesTypeGrid\";\r\n\r\n$(function () {\r\n    initFullHeightGridPage(new CategoriesTypeGrid($('#GridDiv')).element);\r\n});\r\n", "\r\nimport { Decorators, EntityGrid } from \"@serenity-is/corelib\";\r\nimport { CategoriesTypeColumns, CategoriesTypeRow, CategoriesTypeService } from \"../../ServerTypes/Store\";\r\nimport { CategoriesTypeDialog } from \"./CategoriesTypeDialog\";\r\n\r\n    @Decorators.registerClass('Store.Store.CategoriesTypeGrid')\r\n    export class CategoriesTypeGrid extends EntityGrid<CategoriesTypeRow, any> {\r\n        protected getColumnsKey() { return CategoriesTypeColumns.columnsKey; }\r\n        protected getDialogType() { return CategoriesTypeDialog; }\r\n        protected getIdProperty() { return CategoriesTypeRow.idProperty; }\r\n        protected getInsertPermission() { return CategoriesTypeRow.insertPermission; }\r\n        protected getLocalTextPrefix() { return CategoriesTypeRow.localTextPrefix; }\r\n        protected getService() { return CategoriesTypeService.baseUrl; }\r\n    }\r\n", "\r\nimport { Decorators, EntityDialog } from \"@serenity-is/corelib\";\r\nimport { CategoriesTypeForm, CategoriesTypeRow, CategoriesTypeService } from \"../../ServerTypes/Store\";\r\n\r\n    @Decorators.registerClass('Store.Store.CategoriesTypeDialog')\r\n    export class CategoriesTypeDialog extends EntityDialog<CategoriesTypeRow, any> {\r\n        protected getFormKey() { return CategoriesTypeForm.formKey; }\r\n        protected getIdProperty() { return CategoriesTypeRow.idProperty; }\r\n        protected getLocalTextPrefix() { return CategoriesTypeRow.localTextPrefix; }\r\n        protected getNameProperty() { return CategoriesTypeRow.nameProperty; }\r\n        protected getService() { return CategoriesTypeService.baseUrl; }\r\n        protected getDeletePermission() { return CategoriesTypeRow.deletePermission; }\r\n        protected getInsertPermission() { return CategoriesTypeRow.insertPermission; }\r\n        protected getUpdatePermission() { return CategoriesTypeRow.updatePermission; }\r\n\r\n        protected form = new CategoriesTypeForm(this.idPrefix);\r\n    }\r\n"],
  "mappings": "+JACA,IAAAA,EAAuC,SCAvC,IAAAC,EAAuC,SCAvC,IAAAC,EAAyC,SAI9B,IAAMC,EAAN,cAAmC,cAAqC,CAAxE,kCAUH,KAAU,KAAO,IAAIC,EAAmB,KAAK,QAAQ,EAT3C,YAAa,CAAE,OAAOA,EAAmB,OAAS,CAClD,eAAgB,CAAE,OAAOC,EAAkB,UAAY,CACvD,oBAAqB,CAAE,OAAOA,EAAkB,eAAiB,CACjE,iBAAkB,CAAE,OAAOA,EAAkB,YAAc,CAC3D,YAAa,CAAE,OAAOC,EAAsB,OAAS,CACrD,qBAAsB,CAAE,OAAOD,EAAkB,gBAAkB,CACnE,qBAAsB,CAAE,OAAOA,EAAkB,gBAAkB,CACnE,qBAAsB,CAAE,OAAOA,EAAkB,gBAAkB,CAGjF,EAXaE,EAAAJ,EAAA,wBAAAA,EAANK,EAAA,CADN,aAAW,cAAc,kCAAkC,GAC/CL,GDCN,IAAMM,EAAN,cAAiC,YAAmC,CAC7D,eAAgB,CAAE,OAAOC,EAAsB,UAAY,CAC3D,eAAgB,CAAE,OAAOC,CAAsB,CAC/C,eAAgB,CAAE,OAAOC,EAAkB,UAAY,CACvD,qBAAsB,CAAE,OAAOA,EAAkB,gBAAkB,CACnE,oBAAqB,CAAE,OAAOA,EAAkB,eAAiB,CACjE,YAAa,CAAE,OAAOC,EAAsB,OAAS,CACnE,EAPaC,EAAAL,EAAA,sBAAAA,EAANM,EAAA,CADN,aAAW,cAAc,gCAAgC,GAC7CN,GDFjB,EAAE,UAAY,IACV,0BAAuB,IAAIO,EAAmB,EAAE,UAAU,CAAC,EAAE,OAAO,CACxE,CAAC",
  "names": ["import_q", "import_corelib", "import_corelib", "CategoriesTypeDialog", "CategoriesTypeForm", "CategoriesTypeRow", "CategoriesTypeService", "__name", "__decorateClass", "CategoriesTypeGrid", "CategoriesTypeColumns", "CategoriesTypeDialog", "CategoriesTypeRow", "CategoriesTypeService", "__name", "__decorateClass", "CategoriesTypeGrid"]
}
