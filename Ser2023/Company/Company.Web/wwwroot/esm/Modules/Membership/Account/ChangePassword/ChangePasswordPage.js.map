{
  "version": 3,
  "sources": ["../../../../../../Modules/Membership/Account/ChangePassword/ChangePasswordPage.ts"],
  "sourcesContent": ["import { ChangePasswordForm, ChangePasswordRequest } from \"@/ServerTypes/Membership\";\r\nimport { Texts } from \"@/ServerTypes/Texts\";\r\nimport { PropertyPanel } from \"@serenity-is/corelib\";\r\nimport { format, information, resolveUrl, serviceCall, localText, htmlEncode } from \"@serenity-is/corelib/q\";\r\n\r\n$(function () {\r\n    new ChangePasswordPanel($('#ChangePasswordPanel'));\r\n});\r\n\r\nclass ChangePasswordPanel extends PropertyPanel<ChangePasswordRequest, any> {\r\n\r\n    protected getFormKey() { return ChangePasswordForm.formKey; }\r\n\r\n    private form: ChangePasswordForm;\r\n\r\n    constructor(container: JQuery) {\r\n        super(container);\r\n\r\n        this.form = new ChangePasswordForm(this.idPrefix);\r\n        this.form.NewPassword.addValidationRule(this.uniqueName, e => {\r\n            if (this.form.ConfirmPassword.value.length < 7) {\r\n                return format(Texts.Validation.MinRequiredPasswordLength, 7);\r\n            }\r\n        });\r\n\r\n        this.form.ConfirmPassword.addValidationRule(this.uniqueName, e => {\r\n            if (this.form.ConfirmPassword.value !== this.form.NewPassword.value) {\r\n                return localText('Validation.PasswordConfirm');\r\n            }\r\n        });\r\n\r\n        this.byId('SubmitButton').click(e => {\r\n            e.preventDefault();\r\n\r\n            if (!this.validateForm())\r\n                return;\r\n\r\n            var request = this.getSaveEntity();\r\n            serviceCall({\r\n                url: resolveUrl('~/Account/ChangePassword'),\r\n                request: request,\r\n                onSuccess: () => {\r\n                    information(Texts.Forms.Membership.ChangePassword.Success, () => {\r\n                        window.location.href = resolveUrl('~/');\r\n                    });\r\n                }\r\n            });\r\n        });\r\n    }\r\n\r\n    getTemplate() {\r\n        return `<div class=\"s-Panel\">\r\n<h3 class=\"page-title mb-4 text-center\">${htmlEncode(localText(\"Forms.Membership.ChangePassword.FormTitle\"))}</h3>\r\n<form id=\"~_Form\" action=\"\">\r\n    <div id=\"~_PropertyGrid\"></div>\r\n    <div class=\"px-field mt-4\">\r\n        <button id=\"~_SubmitButton\" type=\"submit\" class=\"btn btn-primary w-100\">\r\n            ${htmlEncode(Texts.Forms.Membership.ChangePassword.SubmitButton)}\r\n        </button>\r\n    </div>\r\n</form>\r\n</div>`;\r\n    }\r\n}"],
  "mappings": "mMAEA,IAAAA,EAA8B,SAC9BC,EAAoF,SAEpF,EAAE,UAAY,CACV,IAAIC,EAAoB,EAAE,sBAAsB,CAAC,CACrD,CAAC,EAED,IAAMA,EAAN,cAAkC,eAA0C,CAMxE,YAAYC,EAAmB,CAC3B,MAAMA,CAAS,EAEf,KAAK,KAAO,IAAIC,EAAmB,KAAK,QAAQ,EAChD,KAAK,KAAK,YAAY,kBAAkB,KAAK,WAAYC,GAAK,CAC1D,GAAI,KAAK,KAAK,gBAAgB,MAAM,OAAS,EACzC,SAAO,UAAOC,EAAM,WAAW,0BAA2B,CAAC,CAEnE,CAAC,EAED,KAAK,KAAK,gBAAgB,kBAAkB,KAAK,WAAYD,GAAK,CAC9D,GAAI,KAAK,KAAK,gBAAgB,QAAU,KAAK,KAAK,YAAY,MAC1D,SAAO,aAAU,4BAA4B,CAErD,CAAC,EAED,KAAK,KAAK,cAAc,EAAE,MAAMA,GAAK,CAGjC,GAFAA,EAAE,eAAe,EAEb,EAAC,KAAK,aAAa,EAGvB,KAAIE,EAAU,KAAK,cAAc,KACjC,eAAY,CACR,OAAK,cAAW,0BAA0B,EAC1C,QAASA,EACT,UAAW,IAAM,IACb,eAAYD,EAAM,MAAM,WAAW,eAAe,QAAS,IAAM,CAC7D,OAAO,SAAS,QAAO,cAAW,IAAI,CAC1C,CAAC,CACL,CACJ,CAAC,EACL,CAAC,CACL,CArCU,YAAa,CAAE,OAAOF,EAAmB,OAAS,CAuC5D,aAAc,CACV,MAAO;AAAA,6CAC2B,iBAAW,aAAU,2CAA2C,CAAC;AAAA;AAAA;AAAA;AAAA;AAAA,iBAK7F,cAAWE,EAAM,MAAM,WAAW,eAAe,YAAY;AAAA;AAAA;AAAA;AAAA,OAKvE,CACJ,EAtDME,EAAAN,EAAA",
  "names": ["import_corelib", "import_q", "ChangePasswordPanel", "container", "ChangePasswordForm", "e", "Texts", "request", "__name"]
}
