{
  "version": 3,
  "sources": ["external-global:@serenity-is/extensions", "../../../Modules/ServerTypes/Store/CategoriesColumns.ts", "../../../Modules/Store/CategoriesType/CategoriesTypeDialog.ts", "../../../Modules/ServerTypes/Store/CategoriesExcelImportForm.ts", "../../../Modules/ServerTypes/Store/CategoriesForm.ts", "../../../Modules/ServerTypes/Store/CategoriesLangRow.ts", "../../../Modules/ServerTypes/Store/CategoriesLangService.ts", "../../../Modules/ServerTypes/Store/CategoriesRow.ts", "../../../Modules/ServerTypes/Store/CategoriesService.ts", "../../../Modules/ServerTypes/Store/CategoriesTypeColumns.ts", "../../../Modules/ServerTypes/Store/CategoriesTypeForm.ts", "../../../Modules/ServerTypes/Store/CategoriesTypeRow.ts", "../../../Modules/ServerTypes/Store/CategoriesTypeService.ts", "../../../Modules/Store/Counterparties/EmployeeListFormatter.ts", "../../../Modules/ServerTypes/Store/CounterpartiesColumns.ts", "../../../Modules/ServerTypes/Store/CounterpartiesForm.ts", "../../../Modules/Store/Shared/PhoneEditor.ts", "../../../Modules/Store/Notes/NotesEditor.ts", "../../../Modules/Store/Notes/NotesDialog.ts", "../../../Modules/ServerTypes/Store/CounterpartiesRow.ts", "../../../Modules/ServerTypes/Store/CounterpartiesService.ts", "../../../Modules/ServerTypes/Store/CounterpartyDetailsRow.ts", "../../../Modules/ServerTypes/Store/CounterpartyRepresentativesRow.ts", "../../../Modules/ServerTypes/Store/DocumentTypeColumns.ts", "../../../Modules/ServerTypes/Store/DocumentTypeForm.ts", "../../../Modules/ServerTypes/Store/DocumentTypeRow.ts", "../../../Modules/ServerTypes/Store/DocumentTypeService.ts", "../../../Modules/ServerTypes/Store/EmployeesRow.ts", "../../../Modules/ServerTypes/Store/Gender.ts", "../../../Modules/ServerTypes/Store/MeasuresColumns.ts", "../../../Modules/ServerTypes/Store/MeasuresForm.ts", "../../../Modules/ServerTypes/Store/MeasuresRow.ts", "../../../Modules/ServerTypes/Store/MeasuresService.ts", "../../../Modules/ServerTypes/Store/NotesRow.ts", "../../../Modules/ServerTypes/Store/NotesService.ts", "../../../Modules/ServerTypes/Store/OperationTypeColumns.ts", "../../../Modules/ServerTypes/Store/OperationTypeForm.ts", "../../../Modules/ServerTypes/Store/OperationTypeRow.ts", "../../../Modules/ServerTypes/Store/OperationTypeService.ts", "../../../Modules/ServerTypes/Store/PermissionKeys.ts", "../../../Modules/ServerTypes/Store/ProductDetailsColumns.ts", "../../../Modules/Store/Wares/WaresDialog.ts", "../../../Modules/ServerTypes/Store/ProductDetailsForm.ts", "../../../Modules/ServerTypes/Store/ProductDetailsRow.ts", "../../../Modules/ServerTypes/Store/ProductDetailsService.ts", "../../../Modules/ServerTypes/Store/ProductLangRow.ts", "../../../Modules/ServerTypes/Store/ProductLangService.ts", "../../../Modules/ServerTypes/Store/ProductsColumns.ts", "../../../Modules/Store/Categories/CategoriesDialog.ts", "../../../Modules/ServerTypes/Store/ProductsForm.ts", "../../../Modules/Store/Measures/MeasuresDialog.ts", "../../../Modules/Store/ProductDetails/ProductDetailsEditor.ts", "../../../Modules/Store/ProductDetails/ProductDetailsDialog.ts", "../../../Modules/ServerTypes/Store/ProductsLogRow.ts", "../../../Modules/ServerTypes/Store/ProductsRow.ts", "../../../Modules/ServerTypes/Store/ProductsService.ts", "../../../Modules/ServerTypes/Store/ShippersColumns.ts", "../../../Modules/ServerTypes/Store/ShippersForm.ts", "../../../Modules/ServerTypes/Store/ShippersRow.ts", "../../../Modules/ServerTypes/Store/ShippersService.ts", "../../../Modules/ServerTypes/Store/ShopsColumns.ts", "../../../Modules/ServerTypes/Store/ShopsForm.ts", "../../../Modules/ServerTypes/Store/ShopsRow.ts", "../../../Modules/ServerTypes/Store/ShopsService.ts", "../../../Modules/ServerTypes/Store/WaresColumns.ts", "../../../Modules/ServerTypes/Store/WaresForm.ts", "../../../Modules/Store/Counterparties/CounterpartiesDialog.ts", "../../../Modules/ServerTypes/Store/WaresLangRow.ts", "../../../Modules/ServerTypes/Store/WaresLangService.ts", "../../../Modules/ServerTypes/Store/WaresRow.ts", "../../../Modules/ServerTypes/Store/WaresService.ts"],
  "sourcesContent": ["module.exports = Serenity.Extensions;", "\uFEFFexport class CategoriesColumns {\r\n    static columnsKey = 'Store.Categories';\r\n}", "\r\nimport { Decorators, EntityDialog } from \"@serenity-is/corelib\";\r\nimport { CategoriesTypeForm, CategoriesTypeRow, CategoriesTypeService } from \"../../ServerTypes/Store\";\r\n\r\n    @Decorators.registerClass('Store.Store.CategoriesTypeDialog')\r\n    export class CategoriesTypeDialog extends EntityDialog<CategoriesTypeRow, any> {\r\n        protected getFormKey() { return CategoriesTypeForm.formKey; }\r\n        protected getIdProperty() { return CategoriesTypeRow.idProperty; }\r\n        protected getLocalTextPrefix() { return CategoriesTypeRow.localTextPrefix; }\r\n        protected getNameProperty() { return CategoriesTypeRow.nameProperty; }\r\n        protected getService() { return CategoriesTypeService.baseUrl; }\r\n        protected getDeletePermission() { return CategoriesTypeRow.deletePermission; }\r\n        protected getInsertPermission() { return CategoriesTypeRow.insertPermission; }\r\n        protected getUpdatePermission() { return CategoriesTypeRow.updatePermission; }\r\n\r\n        protected form = new CategoriesTypeForm(this.idPrefix);\r\n    }\r\n", "\uFEFFimport { ImageUploadEditor, PrefixedContext } from \"@serenity-is/corelib\";\r\nimport { initFormType } from \"@serenity-is/corelib/q\";\r\n\r\nexport interface CategoriesExcelImportForm {\r\n    FileName: ImageUploadEditor;\r\n}\r\n\r\nexport class CategoriesExcelImportForm extends PrefixedContext {\r\n    static formKey = 'Store.CategoriesExcelImport';\r\n    private static init: boolean;\r\n\r\n    constructor(prefix: string) {\r\n        super(prefix);\r\n\r\n        if (!CategoriesExcelImportForm.init)  {\r\n            CategoriesExcelImportForm.init = true;\r\n\r\n            var w0 = ImageUploadEditor;\r\n\r\n            initFormType(CategoriesExcelImportForm, [\r\n                'FileName', w0\r\n            ]);\r\n        }\r\n    }\r\n}\r\n", "\uFEFFimport { CategoriesTypeDialog } from \"@/Store/CategoriesType/CategoriesTypeDialog\";\r\nimport { LookupEditor, StringEditor, PrefixedContext } from \"@serenity-is/corelib\";\r\nimport { initFormType } from \"@serenity-is/corelib/q\";\r\n\r\nexport interface CategoriesForm {\r\n    CategoryTypeId: LookupEditor;\r\n    CategoryCode: LookupEditor;\r\n    CategoryName: StringEditor;\r\n    Description: StringEditor;\r\n    Picture: StringEditor;\r\n}\r\n\r\nexport class CategoriesForm extends PrefixedContext {\r\n    static formKey = 'Store.Categories';\r\n    private static init: boolean;\r\n\r\n    constructor(prefix: string) {\r\n        super(prefix);\r\n\r\n        if (!CategoriesForm.init)  {\r\n            CategoriesForm.init = true;\r\n\r\n            var w0 = LookupEditor;\r\n            var w1 = StringEditor;\r\n\r\n            initFormType(CategoriesForm, [\r\n                'CategoryTypeId', w0,\r\n                'CategoryCode', w0,\r\n                'CategoryName', w1,\r\n                'Description', w1,\r\n                'Picture', w1\r\n            ]);\r\n        }\r\n    }\r\n}\r\n\r\n[CategoriesTypeDialog]; // referenced types\r\n", "\uFEFFimport { fieldsProxy } from \"@serenity-is/corelib/q\";\r\n\r\nexport interface CategoriesLangRow {\r\n    Id?: number;\r\n    CategoryId?: number;\r\n    LanguageId?: number;\r\n    CategoryName?: string;\r\n    Description?: string;\r\n}\r\n\r\nexport abstract class CategoriesLangRow {\r\n    static readonly idProperty = 'Id';\r\n    static readonly nameProperty = 'CategoryName';\r\n    static readonly localTextPrefix = 'Store.CategoriesLang';\r\n    static readonly deletePermission = 'Store:General';\r\n    static readonly insertPermission = 'Store:General';\r\n    static readonly readPermission = 'Store:General';\r\n    static readonly updatePermission = 'Store:General';\r\n\r\n    static readonly Fields = fieldsProxy<CategoriesLangRow>();\r\n}\r\n", "\uFEFFimport { SaveRequest, SaveResponse, DeleteRequest, DeleteResponse, RetrieveRequest, RetrieveResponse, ListRequest, ListResponse } from \"@serenity-is/corelib\";\r\nimport { CategoriesLangRow } from \"./CategoriesLangRow\";\r\nimport { ServiceOptions, serviceRequest } from \"@serenity-is/corelib/q\";\r\n\r\nexport namespace CategoriesLangService {\r\n    export const baseUrl = 'Store/CategoriesLang';\r\n\r\n    export declare function Create(request: SaveRequest<CategoriesLangRow>, onSuccess?: (response: SaveResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\r\n    export declare function Update(request: SaveRequest<CategoriesLangRow>, onSuccess?: (response: SaveResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\r\n    export declare function Delete(request: DeleteRequest, onSuccess?: (response: DeleteResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\r\n    export declare function Retrieve(request: RetrieveRequest, onSuccess?: (response: RetrieveResponse<CategoriesLangRow>) => void, opt?: ServiceOptions<any>): JQueryXHR;\r\n    export declare function List(request: ListRequest, onSuccess?: (response: ListResponse<CategoriesLangRow>) => void, opt?: ServiceOptions<any>): JQueryXHR;\r\n\r\n    export const Methods = {\r\n        Create: \"Store/CategoriesLang/Create\",\r\n        Update: \"Store/CategoriesLang/Update\",\r\n        Delete: \"Store/CategoriesLang/Delete\",\r\n        Retrieve: \"Store/CategoriesLang/Retrieve\",\r\n        List: \"Store/CategoriesLang/List\"\r\n    } as const;\r\n\r\n    [\r\n        'Create', \r\n        'Update', \r\n        'Delete', \r\n        'Retrieve', \r\n        'List'\r\n    ].forEach(x => {\r\n        (<any>CategoriesLangService)[x] = function (r, s, o) {\r\n            return serviceRequest(baseUrl + '/' + x, r, s, o);\r\n        };\r\n    });\r\n}\r\n", "\uFEFFimport { getLookup, getLookupAsync, fieldsProxy } from \"@serenity-is/corelib/q\";\r\n\r\nexport interface CategoriesRow {\r\n    CategoryId?: number;\r\n    CategoryTypeId?: number;\r\n    CategoryCode?: string;\r\n    CategoryName?: string;\r\n    Description?: string;\r\n    Picture?: number[];\r\n    IsActive?: number;\r\n    TenantId?: number;\r\n    Type?: number;\r\n    CategoryType?: string;\r\n    InsertUserId?: number;\r\n    InsertDate?: string;\r\n    UpdateUserId?: number;\r\n    UpdateDate?: string;\r\n}\r\n\r\nexport abstract class CategoriesRow {\r\n    static readonly idProperty = 'CategoryId';\r\n    static readonly isActiveProperty = 'IsActive';\r\n    static readonly nameProperty = 'CategoryName';\r\n    static readonly localTextPrefix = 'Store.Categories';\r\n    static readonly lookupKey = 'Store.Categories';\r\n\r\n    /** @deprecated use getLookupAsync instead */\r\n    static getLookup() { return getLookup<CategoriesRow>('Store.Categories') }\r\n    static async getLookupAsync() { return getLookupAsync<CategoriesRow>('Store.Categories') }\r\n\r\n    static readonly deletePermission = 'Store:CategoriesType:Delete';\r\n    static readonly insertPermission = 'Store:CategoriesType:Modify';\r\n    static readonly readPermission = 'Store:CategoriesType:View';\r\n    static readonly updatePermission = 'Store:CategoriesType:Modify';\r\n\r\n    static readonly Fields = fieldsProxy<CategoriesRow>();\r\n}\r\n", "\uFEFFimport { SaveRequest, SaveResponse, DeleteRequest, DeleteResponse, RetrieveRequest, RetrieveResponse, ListResponse } from \"@serenity-is/corelib\";\r\nimport { CategoriesRow } from \"./CategoriesRow\";\r\nimport { ServiceOptions, serviceRequest } from \"@serenity-is/corelib/q\";\r\nimport { CategoriesListRequest } from \"./CategoriesListRequest\";\r\nimport { ExcelImportRequest } from \"../ExcelImportRequest\";\r\nimport { ExcelImportResponse } from \"../ExcelImportResponse\";\r\n\r\nexport namespace CategoriesService {\r\n    export const baseUrl = 'Store/Categories';\r\n\r\n    export declare function Create(request: SaveRequest<CategoriesRow>, onSuccess?: (response: SaveResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\r\n    export declare function Update(request: SaveRequest<CategoriesRow>, onSuccess?: (response: SaveResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\r\n    export declare function Delete(request: DeleteRequest, onSuccess?: (response: DeleteResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\r\n    export declare function Retrieve(request: RetrieveRequest, onSuccess?: (response: RetrieveResponse<CategoriesRow>) => void, opt?: ServiceOptions<any>): JQueryXHR;\r\n    export declare function List(request: CategoriesListRequest, onSuccess?: (response: ListResponse<CategoriesRow>) => void, opt?: ServiceOptions<any>): JQueryXHR;\r\n    export declare function ExcelImport(request: ExcelImportRequest, onSuccess?: (response: ExcelImportResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\r\n\r\n    export const Methods = {\r\n        Create: \"Store/Categories/Create\",\r\n        Update: \"Store/Categories/Update\",\r\n        Delete: \"Store/Categories/Delete\",\r\n        Retrieve: \"Store/Categories/Retrieve\",\r\n        List: \"Store/Categories/List\",\r\n        ExcelImport: \"Store/Categories/ExcelImport\"\r\n    } as const;\r\n\r\n    [\r\n        'Create', \r\n        'Update', \r\n        'Delete', \r\n        'Retrieve', \r\n        'List', \r\n        'ExcelImport'\r\n    ].forEach(x => {\r\n        (<any>CategoriesService)[x] = function (r, s, o) {\r\n            return serviceRequest(baseUrl + '/' + x, r, s, o);\r\n        };\r\n    });\r\n}\r\n", "\uFEFFexport class CategoriesTypeColumns {\r\n    static columnsKey = 'Store.CategoriesType';\r\n}\r\n", "\uFEFFimport { IntegerEditor, StringEditor, PrefixedContext } from \"@serenity-is/corelib\";\r\nimport { initFormType } from \"@serenity-is/corelib/q\";\r\n\r\nexport interface CategoriesTypeForm {\r\n    Type: IntegerEditor;\r\n    CategoryType: StringEditor;\r\n}\r\n\r\nexport class CategoriesTypeForm extends PrefixedContext {\r\n    static formKey = 'Store.CategoriesType';\r\n    private static init: boolean;\r\n\r\n    constructor(prefix: string) {\r\n        super(prefix);\r\n\r\n        if (!CategoriesTypeForm.init)  {\r\n            CategoriesTypeForm.init = true;\r\n\r\n            var w0 = IntegerEditor;\r\n            var w1 = StringEditor;\r\n\r\n            initFormType(CategoriesTypeForm, [\r\n                'Type', w0,\r\n                'CategoryType', w1\r\n            ]);\r\n        }\r\n    }\r\n}\r\n", "\uFEFFimport { getLookup, getLookupAsync, fieldsProxy } from \"@serenity-is/corelib/q\";\r\n\r\nexport interface CategoriesTypeRow {\r\n    CategoryTypeId?: number;\r\n    Type?: number;\r\n    CategoryType?: string;\r\n    IsActive?: number;\r\n    TenantId?: number;\r\n    InsertUserId?: number;\r\n    InsertDate?: string;\r\n    UpdateUserId?: number;\r\n    UpdateDate?: string;\r\n}\r\n\r\nexport abstract class CategoriesTypeRow {\r\n    static readonly idProperty = 'CategoryTypeId';\r\n    static readonly isActiveProperty = 'IsActive';\r\n    static readonly nameProperty = 'Type';\r\n    static readonly localTextPrefix = 'Store.CategoriesType';\r\n    static readonly lookupKey = 'Store.CategoriesType';\r\n\r\n    /** @deprecated use getLookupAsync instead */\r\n    static getLookup() { return getLookup<CategoriesTypeRow>('Store.CategoriesType') }\r\n    static async getLookupAsync() { return getLookupAsync<CategoriesTypeRow>('Store.CategoriesType') }\r\n\r\n    static readonly deletePermission = 'Store:CategoriesType:Delete';\r\n    static readonly insertPermission = 'Store:CategoriesType:Modify';\r\n    static readonly readPermission = 'Store:CategoriesType:View';\r\n    static readonly updatePermission = 'Store:CategoriesType:Modify';\r\n\r\n    static readonly Fields = fieldsProxy<CategoriesTypeRow>();\r\n}\r\n", "\uFEFFimport { SaveRequest, SaveResponse, DeleteRequest, DeleteResponse, RetrieveRequest, RetrieveResponse, ListRequest, ListResponse } from \"@serenity-is/corelib\";\r\nimport { CategoriesTypeRow } from \"./CategoriesTypeRow\";\r\nimport { ServiceOptions, serviceRequest } from \"@serenity-is/corelib/q\";\r\n\r\nexport namespace CategoriesTypeService {\r\n    export const baseUrl = 'Store/CategoriesType';\r\n\r\n    export declare function Create(request: SaveRequest<CategoriesTypeRow>, onSuccess?: (response: SaveResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\r\n    export declare function Update(request: SaveRequest<CategoriesTypeRow>, onSuccess?: (response: SaveResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\r\n    export declare function Delete(request: DeleteRequest, onSuccess?: (response: DeleteResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\r\n    export declare function Retrieve(request: RetrieveRequest, onSuccess?: (response: RetrieveResponse<CategoriesTypeRow>) => void, opt?: ServiceOptions<any>): JQueryXHR;\r\n    export declare function List(request: ListRequest, onSuccess?: (response: ListResponse<CategoriesTypeRow>) => void, opt?: ServiceOptions<any>): JQueryXHR;\r\n\r\n    export const Methods = {\r\n        Create: \"Store/CategoriesType/Create\",\r\n        Update: \"Store/CategoriesType/Update\",\r\n        Delete: \"Store/CategoriesType/Delete\",\r\n        Retrieve: \"Store/CategoriesType/Retrieve\",\r\n        List: \"Store/CategoriesType/List\"\r\n    } as const;\r\n\r\n    [\r\n        'Create', \r\n        'Update', \r\n        'Delete', \r\n        'Retrieve', \r\n        'List'\r\n    ].forEach(x => {\r\n        (<any>CategoriesTypeService)[x] = function (r, s, o) {\r\n            return serviceRequest(baseUrl + '/' + x, r, s, o);\r\n        };\r\n    });\r\n}\r\n", "import { Decorators, Formatter } from \"@serenity-is/corelib\";\r\nimport { FormatterContext } from \"@serenity-is/sleekgrid\";\r\nimport { EmployeesRow } from \"../../ServerTypes/Store\";\r\n\r\n@Decorators.registerFormatter('Store.Store.EmployeeListFormatter')\r\nexport class EmployeeListFormatter implements Formatter {\r\n    format(ctx: FormatterContext) {\r\n        var idList = ctx.value as string[];\r\n        if (!idList || !idList.length)\r\n            return \"\";\r\n\r\n        var byId = EmployeesRow.getLookup().itemById;\r\n        let z: EmployeesRow;\r\n        return idList.map(x => ((z = byId[x]) ? z.FullName : x)).join(\", \");\r\n    }\r\n}\r\n", "\uFEFFimport { EmployeeListFormatter } from \"@/Store/Counterparties/EmployeeListFormatter\";\r\n\r\nexport class CounterpartiesColumns {\r\n    static columnsKey = 'Store.Counterparties';\r\n}\r\n\r\n[EmployeeListFormatter]; // referenced types\r\n", "\uFEFFimport { StringEditor, LookupEditor, DateEditor, EmailEditor, BooleanEditor, PrefixedContext } from \"@serenity-is/corelib\";\r\nimport { PhoneEditor } from \"@/Store/Shared/PhoneEditor\";\r\nimport { NotesEditor } from \"@/Store/Notes/NotesEditor\";\r\nimport { initFormType } from \"@serenity-is/corelib/q\";\r\n\r\nexport interface CounterpartiesForm {\r\n    CounterpartyId: StringEditor;\r\n    CompanyName: StringEditor;\r\n    ContactName: StringEditor;\r\n    ContactTitle: StringEditor;\r\n    Representatives: LookupEditor;\r\n    Address: StringEditor;\r\n    Country: LookupEditor;\r\n    City: LookupEditor;\r\n    Region: StringEditor;\r\n    PostalCode: StringEditor;\r\n    Phone: PhoneEditor;\r\n    NotesList: NotesEditor;\r\n    LastContactDate: DateEditor;\r\n    LastContactedBy: LookupEditor;\r\n    Email: EmailEditor;\r\n    SendBulletin: BooleanEditor;\r\n}\r\n\r\nexport class CounterpartiesForm extends PrefixedContext {\r\n    static formKey = 'Store.Counterparties';\r\n    private static init: boolean;\r\n\r\n    constructor(prefix: string) {\r\n        super(prefix);\r\n\r\n        if (!CounterpartiesForm.init)  {\r\n            CounterpartiesForm.init = true;\r\n\r\n            var w0 = StringEditor;\r\n            var w1 = LookupEditor;\r\n            var w2 = PhoneEditor;\r\n            var w3 = NotesEditor;\r\n            var w4 = DateEditor;\r\n            var w5 = EmailEditor;\r\n            var w6 = BooleanEditor;\r\n\r\n            initFormType(CounterpartiesForm, [\r\n                'CounterpartyId', w0,\r\n                'CompanyName', w0,\r\n                'ContactName', w0,\r\n                'ContactTitle', w0,\r\n                'Representatives', w1,\r\n                'Address', w0,\r\n                'Country', w1,\r\n                'City', w1,\r\n                'Region', w0,\r\n                'PostalCode', w0,\r\n                'Phone', w2,\r\n                'NotesList', w3,\r\n                'LastContactDate', w4,\r\n                'LastContactedBy', w1,\r\n                'Email', w5,\r\n                'SendBulletin', w6\r\n            ]);\r\n        }\r\n    }\r\n}\r\n", "\r\nimport { Decorators, StringEditor, WX } from \"@serenity-is/corelib\";\r\nimport { isEmptyOrNull, replaceAll, startsWith, localText, trimToNull } from \"@serenity-is/corelib/q\";\r\n\r\n@Decorators.registerEditor('Store.Store.PhoneEditor')\r\nexport class PhoneEditor extends StringEditor {\r\n    constructor(input: JQuery) {\r\n        super(input);\r\n\r\n        this.addValidationRule(this.uniqueName, e => {\r\n            var value = trimToNull(this.get_value());\r\n            if (value == null) {\r\n                return null;\r\n            }\r\n            return PhoneEditor.validate(value, this.multiple);\r\n        });\r\n\r\n        input.bind('change', e => {\r\n            if (!WX.hasOriginalEvent(e)) {\r\n                return;\r\n            }\r\n            this.formatValue();\r\n        });\r\n\r\n        input.bind('blur', e => {\r\n            if (this.element.hasClass('valid')) {\r\n                this.formatValue();\r\n            }\r\n        });\r\n    }\r\n\r\n    protected formatValue(): void {\r\n        this.element.val(this.getFormattedValue());\r\n    }\r\n\r\n    protected getFormattedValue(): string {\r\n        var value = this.element.val();\r\n        if (this.multiple) {\r\n            return PhoneEditor.formatMulti(value, PhoneEditor.formatPhone);\r\n        }\r\n        return PhoneEditor.formatPhone(value);\r\n    }\r\n\r\n    @Decorators.option()\r\n    public multiple: boolean;\r\n\r\n    get_value() {\r\n        return this.getFormattedValue();\r\n    }\r\n\r\n    set_value(value: string) {\r\n        this.element.val(value);\r\n    }\r\n\r\n    static validate(phone: string, isMultiple: boolean) {\r\n        var valid = (isMultiple ? PhoneEditor.isValidMulti(phone, PhoneEditor.isValidPhone) : PhoneEditor.isValidPhone(phone));\r\n        if (valid) {\r\n            return null;\r\n        }\r\n        return localText((isMultiple ? 'Validation.StorePhoneMultiple' : 'Validation.StorePhone'));\r\n    }\r\n\r\n    static isValidPhone(phone: string) {\r\n        if (isEmptyOrNull(phone)) {\r\n            return false;\r\n        }\r\n        phone = replaceAll(replaceAll(phone, ' ', ''), '-', '');\r\n        if (phone.length < 10) {\r\n            return false;\r\n        }\r\n\r\n        if (startsWith(phone, '0')) {\r\n            phone = phone.substring(1);\r\n        }\r\n\r\n        if (startsWith(phone, '(') && phone.charAt(4) === ')') {\r\n            phone = phone.substr(1, 3) + phone.substring(5);\r\n        }\r\n\r\n        if (phone.length !== 12) {\r\n            return false;\r\n        }\r\n\r\n        if (startsWith(phone, '0')) {\r\n            return false;\r\n        }\r\n\r\n        for (var i = 0; i < phone.length; i++) {\r\n            var c = phone.charAt(i);\r\n            if (c < '0' || c > '9') {\r\n                return false;\r\n            }\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    static formatPhone(phone) {\r\n        if (!PhoneEditor.isValidPhone(phone)) {\r\n            return phone;\r\n        }\r\n        phone = replaceAll(replaceAll(replaceAll(replaceAll(phone, ' ', ''), '-', ''), '(', ''), ')', '');\r\n        if (startsWith(phone, '0')) {\r\n            phone = phone.substring(1);\r\n        }\r\n        phone = '(' + phone.substr(0, 3) + ') ' + phone.substr(3, 3) + '-' + phone.substr(6, 2) + phone.substr(8, 2) + phone.substr(10, 2);\r\n        return phone;\r\n    }\r\n\r\n    static formatMulti(phone: string, format: (s: string) => string) {\r\n        var phones = replaceAll(phone, String.fromCharCode(59), String.fromCharCode(44)).split(String.fromCharCode(44));\r\n        var result = '';\r\n        for (var x of phones) {\r\n            var s = trimToNull(x);\r\n            if (s == null) {\r\n                continue;\r\n            }\r\n            if (result.length > 0) {\r\n                result += ', ';\r\n            }\r\n            result += format(s);\r\n        }\r\n        return result;\r\n    }\r\n\r\n    static isValidMulti(phone: string, check: (s: string) => boolean) {\r\n        if (isEmptyOrNull(phone)) {\r\n            return false;\r\n        }\r\n        var phones = replaceAll(phone, String.fromCharCode(59), String.fromCharCode(44)).split(String.fromCharCode(44));\r\n        var anyValid = false;\r\n        for (var $t1 = 0; $t1 < phones.length; $t1++) {\r\n            var x = phones[$t1];\r\n            var s = trimToNull(x);\r\n            if (s == null) {\r\n                continue;\r\n            }\r\n            if (!check(s)) {\r\n                return false;\r\n            }\r\n            anyValid = true;\r\n        }\r\n        if (!anyValid) {\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n}\r\n", "import { Decorators, IGetEditValue, ISetEditValue, PropertyItem, TemplatedWidget, Toolbar } from \"@serenity-is/corelib\";\r\nimport { Authorization, coalesce, confirmDialog, formatDate, formatISODateTimeUTC, insert, trimToNull } from \"@serenity-is/corelib/q\";\r\nimport { NotesRow } from \"../../ServerTypes/Store\";\r\nimport { NotesDialog } from \"./NotesDialog\";\r\n\r\n@Decorators.registerEditor('Store.Store.NotesEditor', [IGetEditValue, ISetEditValue])\r\n@Decorators.element(\"<div/>\")\r\nexport class NotesEditor extends TemplatedWidget<any>\r\n    implements IGetEditValue, ISetEditValue {\r\n\r\n    private isDirty: boolean;\r\n    private items: NotesRow[];\r\n\r\n    constructor(div: JQuery) {\r\n        super(div);\r\n\r\n        new Toolbar(this.byId('Toolbar'), {\r\n            buttons: [{\r\n                title: 'Add Note',\r\n                cssClass: 'add-button',\r\n                onClick: e => {\r\n                    e.preventDefault();\r\n                    this.addClick();\r\n                }\r\n            }]\r\n        });\r\n    }\r\n\r\n    protected getTemplate() {\r\n        return \"<div><div id='~_Toolbar'></div><ul id='~_NoteList'></ul></div>\";\r\n    }\r\n\r\n    protected updateContent() {\r\n        var noteList = this.byId('NoteList');\r\n        noteList.children().remove();\r\n        if (this.items) {\r\n            var index = 0;\r\n            for (var t1 = 0; t1 < this.items.length; t1++) {\r\n                var item = this.items[t1];\r\n                var li = $('<li/>');\r\n                $('<div/>').addClass('note-text').html(coalesce(item.Text, '')).appendTo(li);\r\n\r\n                $('<a/>').attr('href', '#').addClass('note-date')\r\n                    .text(item.InsertUserDisplayName + ' - ' +\r\n                        formatDate(item.InsertDate, 'g'))\r\n                    .data('index', index).appendTo(li).click((e) => this.editClick(e));\r\n\r\n                $('<a/>').attr('href', '#').addClass('note-delete')\r\n                    .attr('title', 'delete note').data('index', index)\r\n                    .appendTo(li).click((e) => this.deleteClick(e));\r\n\r\n                li.appendTo(noteList);\r\n                index++;\r\n            }\r\n        }\r\n    }\r\n\r\n    protected addClick() {\r\n        var dlg = new NotesDialog();\r\n        dlg.dialogTitle = 'Add Note';\r\n        dlg.okClick = () => {\r\n            var text = trimToNull(dlg.text);\r\n            if (text == null) {\r\n                return;\r\n            }\r\n\r\n            this.items = this.items || [];\r\n            insert(this.items, 0, {\r\n                Text: text,\r\n                InsertUserDisplayName: Authorization.userDefinition.DisplayName,\r\n                InsertDate: formatISODateTimeUTC(new Date())\r\n            });\r\n\r\n            this.updateContent();\r\n            dlg.dialogClose();\r\n            this.set_isDirty(true);\r\n            this.onChange && this.onChange();\r\n        };\r\n        dlg.dialogOpen();\r\n    }\r\n\r\n    protected editClick(e) {\r\n        e.preventDefault();\r\n        var index = $(e.target).data('index');\r\n        var old = this.items[index];\r\n        var dlg = new NotesDialog();\r\n        dlg.dialogTitle = 'Edit Note';\r\n        dlg.text = old.Text;\r\n        dlg.okClick = () => {\r\n            var text = trimToNull(dlg.text);\r\n            if (!text) {\r\n                return;\r\n            }\r\n\r\n            this.items[index].Text = text;\r\n            this.updateContent();\r\n            dlg.dialogClose();\r\n            this.set_isDirty(true);\r\n            this.onChange && this.onChange();\r\n        };\r\n        dlg.dialogOpen();\r\n    }\r\n\r\n    public deleteClick(e) {\r\n        e.preventDefault();\r\n        var index = $(e.target).data('index');\r\n        confirmDialog('Delete this note?', () => {\r\n            this.items.splice(index, 1);\r\n            this.updateContent();\r\n            this.set_isDirty(true);\r\n            this.onChange && this.onChange();\r\n        });\r\n    }\r\n\r\n    public get value() {\r\n        return this.items;\r\n    }\r\n\r\n    public set value(value: NotesRow[]) {\r\n        this.items = value || [];\r\n        this.set_isDirty(false);\r\n        this.updateContent();\r\n    }\r\n\r\n    public getEditValue(prop: PropertyItem, target) {\r\n        target[prop.name] = this.value;\r\n    }\r\n\r\n    public setEditValue(source, prop: PropertyItem) {\r\n        this.value = source[prop.name] || [];\r\n    }\r\n\r\n    public get_isDirty(): boolean {\r\n        return this.isDirty;\r\n    }\r\n\r\n    public set_isDirty(value): void {\r\n        this.isDirty = value;\r\n    }\r\n\r\n    public onChange: () => void;\r\n}\r\n", "import { Decorators, HtmlContentEditor, HtmlNoteContentEditor, TemplatedDialog } from \"@serenity-is/corelib\";\r\nimport { localText } from \"@serenity-is/corelib/q\";\r\n\r\n@Decorators.registerClass('Store.Store.NotesDialog')\r\nexport class NotesDialog extends TemplatedDialog<any> {\r\n\r\n    private textEditor: HtmlContentEditor;\r\n\r\n    constructor() {\r\n        super();\r\n\r\n        this.textEditor = new HtmlNoteContentEditor(this.byId('Text'));\r\n    }\r\n\r\n    protected getTemplate() {\r\n        return (\r\n            \"<form id='~_Form' class='s-Form'>\" +\r\n            \"<textarea id='~_Text' class='required'></textarea>\" +\r\n            \"</form>\");\r\n    }\r\n\r\n    protected getDialogButtons() {\r\n        return [\r\n            {\r\n                text: localText('Dialogs.OkButton'),\r\n                click: () => {\r\n                    if (!this.validateForm()) {\r\n                        return;\r\n                    }\r\n\r\n                    this.okClick && this.okClick();\r\n                }\r\n            },\r\n            {\r\n                text: localText('Dialogs.CancelButton'),\r\n                click: () => this.dialogClose()\r\n            }\r\n        ];\r\n    }\r\n\r\n    get text(): string {\r\n        return this.textEditor.value;\r\n    }\r\n\r\n    set text(value: string) {\r\n        this.textEditor.value = value;\r\n    }\r\n\r\n    public okClick: () => void;\r\n}\r\n", "\uFEFFimport { NotesRow } from \"./NotesRow\";\r\nimport { getLookup, getLookupAsync, fieldsProxy } from \"@serenity-is/corelib/q\";\r\n\r\nexport interface CounterpartiesRow {\r\n    Id?: number;\r\n    CounterpartyId?: string;\r\n    CompanyName?: string;\r\n    ContactName?: string;\r\n    ContactTitle?: string;\r\n    Address?: string;\r\n    City?: string;\r\n    Region?: string;\r\n    PostalCode?: string;\r\n    Country?: string;\r\n    Phone?: string;\r\n    IsActive?: number;\r\n    TenantId?: number;\r\n    NotesList?: NotesRow[];\r\n    Representatives?: number[];\r\n    LastContactDate?: string;\r\n    LastContactedBy?: number;\r\n    Email?: string;\r\n    SendBulletin?: boolean;\r\n    InsertUserId?: number;\r\n    InsertDate?: string;\r\n    UpdateUserId?: number;\r\n    UpdateDate?: string;\r\n}\r\n\r\nexport abstract class CounterpartiesRow {\r\n    static readonly idProperty = 'Id';\r\n    static readonly isActiveProperty = 'IsActive';\r\n    static readonly nameProperty = 'CounterpartyId';\r\n    static readonly localTextPrefix = 'Store.Counterparties';\r\n    static readonly lookupKey = 'Store.Counterparties';\r\n\r\n    /** @deprecated use getLookupAsync instead */\r\n    static getLookup() { return getLookup<CounterpartiesRow>('Store.Counterparties') }\r\n    static async getLookupAsync() { return getLookupAsync<CounterpartiesRow>('Store.Counterparties') }\r\n\r\n    static readonly deletePermission = 'Store:Counterparties:Delete';\r\n    static readonly insertPermission = 'Store:Counterparties:Modify';\r\n    static readonly readPermission = 'Store:Counterparties:View';\r\n    static readonly updatePermission = 'Store:Counterparties:Modify';\r\n\r\n    static readonly Fields = fieldsProxy<CounterpartiesRow>();\r\n}\r\n", "\uFEFFimport { SaveRequest, SaveResponse, DeleteRequest, DeleteResponse, RetrieveRequest, RetrieveResponse, ListRequest, ListResponse } from \"@serenity-is/corelib\";\r\nimport { CounterpartiesRow } from \"./CounterpartiesRow\";\r\nimport { ServiceOptions, serviceRequest } from \"@serenity-is/corelib/q\";\r\n\r\nexport namespace CounterpartiesService {\r\n    export const baseUrl = 'Store/Counterparties';\r\n\r\n    export declare function Create(request: SaveRequest<CounterpartiesRow>, onSuccess?: (response: SaveResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\r\n    export declare function Update(request: SaveRequest<CounterpartiesRow>, onSuccess?: (response: SaveResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\r\n    export declare function Delete(request: DeleteRequest, onSuccess?: (response: DeleteResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\r\n    export declare function Retrieve(request: RetrieveRequest, onSuccess?: (response: RetrieveResponse<CounterpartiesRow>) => void, opt?: ServiceOptions<any>): JQueryXHR;\r\n    export declare function List(request: ListRequest, onSuccess?: (response: ListResponse<CounterpartiesRow>) => void, opt?: ServiceOptions<any>): JQueryXHR;\r\n\r\n    export const Methods = {\r\n        Create: \"Store/Counterparties/Create\",\r\n        Update: \"Store/Counterparties/Update\",\r\n        Delete: \"Store/Counterparties/Delete\",\r\n        Retrieve: \"Store/Counterparties/Retrieve\",\r\n        List: \"Store/Counterparties/List\"\r\n    } as const;\r\n\r\n    [\r\n        'Create', \r\n        'Update', \r\n        'Delete', \r\n        'Retrieve', \r\n        'List'\r\n    ].forEach(x => {\r\n        (<any>CounterpartiesService)[x] = function (r, s, o) {\r\n            return serviceRequest(baseUrl + '/' + x, r, s, o);\r\n        };\r\n    });\r\n}\r\n", "\uFEFFimport { fieldsProxy } from \"@serenity-is/corelib/q\";\r\n\r\nexport interface CounterpartyDetailsRow {\r\n    Id?: number;\r\n    LastContactDate?: string;\r\n    LastContactedBy?: number;\r\n    Email?: string;\r\n    SendBulletin?: boolean;\r\n    LastContactedByLastName?: string;\r\n    LastContactedByFirstName?: string;\r\n    LastContactedByTitle?: string;\r\n    LastContactedByTitleOfCourtesy?: string;\r\n    LastContactedByBirthDate?: string;\r\n    LastContactedByHireDate?: string;\r\n    LastContactedByAddress?: string;\r\n    LastContactedByCity?: string;\r\n    LastContactedByRegion?: string;\r\n    LastContactedByPostalCode?: string;\r\n    LastContactedByCountry?: string;\r\n    LastContactedByHomePhone?: string;\r\n    LastContactedByExtension?: string;\r\n    LastContactedByPhoto?: number[];\r\n    LastContactedByNotes?: string;\r\n    LastContactedByReportsTo?: number;\r\n    LastContactedByPhotoPath?: string;\r\n}\r\n\r\nexport abstract class CounterpartyDetailsRow {\r\n    static readonly idProperty = 'Id';\r\n    static readonly nameProperty = 'Email';\r\n    static readonly localTextPrefix = 'Store.CounterpartyDetails';\r\n    static readonly deletePermission = 'Store:Counterparties:Delete';\r\n    static readonly insertPermission = 'Store:Counterparties:Modify';\r\n    static readonly readPermission = 'Store:Counterparties:View';\r\n    static readonly updatePermission = 'Store:Counterparties:Modify';\r\n\r\n    static readonly Fields = fieldsProxy<CounterpartyDetailsRow>();\r\n}\r\n", "\uFEFFimport { fieldsProxy } from \"@serenity-is/corelib/q\";\r\n\r\nexport interface CounterpartyRepresentativesRow {\r\n    RepresentativeId?: number;\r\n    CounterpartyId?: number;\r\n    EmployeeId?: number;\r\n}\r\n\r\nexport abstract class CounterpartyRepresentativesRow {\r\n    static readonly idProperty = 'RepresentativeId';\r\n    static readonly localTextPrefix = 'Store.CounterpartyRepresentatives';\r\n    static readonly deletePermission = 'Store:Counterparties:Delete';\r\n    static readonly insertPermission = 'Store:Counterparties:Modify';\r\n    static readonly readPermission = 'Store:Counterparties:View';\r\n    static readonly updatePermission = 'Store:Counterparties:Modify';\r\n\r\n    static readonly Fields = fieldsProxy<CounterpartyRepresentativesRow>();\r\n}\r\n", "\uFEFFexport class DocumentTypeColumns {\r\n    static columnsKey = 'Store.DocumentType';\r\n}", "\uFEFFimport { StringEditor, PrefixedContext } from \"@serenity-is/corelib\";\r\nimport { initFormType } from \"@serenity-is/corelib/q\";\r\n\r\nexport interface DocumentTypeForm {\r\n    DocumentName: StringEditor;\r\n}\r\n\r\nexport class DocumentTypeForm extends PrefixedContext {\r\n    static formKey = 'Store.DocumentType';\r\n    private static init: boolean;\r\n\r\n    constructor(prefix: string) {\r\n        super(prefix);\r\n\r\n        if (!DocumentTypeForm.init)  {\r\n            DocumentTypeForm.init = true;\r\n\r\n            var w0 = StringEditor;\r\n\r\n            initFormType(DocumentTypeForm, [\r\n                'DocumentName', w0\r\n            ]);\r\n        }\r\n    }\r\n}\r\n", "\uFEFFimport { getLookup, getLookupAsync, fieldsProxy } from \"@serenity-is/corelib/q\";\r\n\r\nexport interface DocumentTypeRow {\r\n    DocumentTypeId?: number;\r\n    DocumentName?: string;\r\n    IsActive?: number;\r\n    TenantId?: number;\r\n    InsertUserId?: number;\r\n    InsertDate?: string;\r\n    UpdateUserId?: number;\r\n    UpdateDate?: string;\r\n}\r\n\r\nexport abstract class DocumentTypeRow {\r\n    static readonly idProperty = 'DocumentTypeId';\r\n    static readonly isActiveProperty = 'IsActive';\r\n    static readonly nameProperty = 'DocumentName';\r\n    static readonly localTextPrefix = 'Store.DocumentType';\r\n    static readonly lookupKey = 'Store.DocumentType';\r\n\r\n    /** @deprecated use getLookupAsync instead */\r\n    static getLookup() { return getLookup<DocumentTypeRow>('Store.DocumentType') }\r\n    static async getLookupAsync() { return getLookupAsync<DocumentTypeRow>('Store.DocumentType') }\r\n\r\n    static readonly deletePermission = 'Store:DocumentType:Delete';\r\n    static readonly insertPermission = 'Store:DocumentType:Modify';\r\n    static readonly readPermission = 'Store:DocumentType:View';\r\n    static readonly updatePermission = 'Store:DocumentType:Modify';\r\n\r\n    static readonly Fields = fieldsProxy<DocumentTypeRow>();\r\n}\r\n", "\uFEFFimport { SaveRequest, SaveResponse, DeleteRequest, DeleteResponse, RetrieveRequest, RetrieveResponse, ListRequest, ListResponse } from \"@serenity-is/corelib\";\r\nimport { DocumentTypeRow } from \"./DocumentTypeRow\";\r\nimport { ServiceOptions, serviceRequest } from \"@serenity-is/corelib/q\";\r\n\r\nexport namespace DocumentTypeService {\r\n    export const baseUrl = 'Store/DocumentType';\r\n\r\n    export declare function Create(request: SaveRequest<DocumentTypeRow>, onSuccess?: (response: SaveResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\r\n    export declare function Update(request: SaveRequest<DocumentTypeRow>, onSuccess?: (response: SaveResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\r\n    export declare function Delete(request: DeleteRequest, onSuccess?: (response: DeleteResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\r\n    export declare function Retrieve(request: RetrieveRequest, onSuccess?: (response: RetrieveResponse<DocumentTypeRow>) => void, opt?: ServiceOptions<any>): JQueryXHR;\r\n    export declare function List(request: ListRequest, onSuccess?: (response: ListResponse<DocumentTypeRow>) => void, opt?: ServiceOptions<any>): JQueryXHR;\r\n\r\n    export const Methods = {\r\n        Create: \"Store/DocumentType/Create\",\r\n        Update: \"Store/DocumentType/Update\",\r\n        Delete: \"Store/DocumentType/Delete\",\r\n        Retrieve: \"Store/DocumentType/Retrieve\",\r\n        List: \"Store/DocumentType/List\"\r\n    } as const;\r\n\r\n    [\r\n        'Create', \r\n        'Update', \r\n        'Delete', \r\n        'Retrieve', \r\n        'List'\r\n    ].forEach(x => {\r\n        (<any>DocumentTypeService)[x] = function (r, s, o) {\r\n            return serviceRequest(baseUrl + '/' + x, r, s, o);\r\n        };\r\n    });\r\n}\r\n", "\uFEFFimport { Gender } from \"./Gender\";\r\nimport { getLookup, getLookupAsync, fieldsProxy } from \"@serenity-is/corelib/q\";\r\n\r\nexport interface EmployeesRow {\r\n    EmployeeId?: number;\r\n    LastName?: string;\r\n    FirstName?: string;\r\n    FullName?: string;\r\n    Title?: string;\r\n    TitleOfCourtesy?: string;\r\n    BirthDate?: string;\r\n    HireDate?: string;\r\n    Address?: string;\r\n    City?: string;\r\n    Region?: string;\r\n    PostalCode?: string;\r\n    Country?: string;\r\n    HomePhone?: string;\r\n    Extension?: string;\r\n    Photo?: number[];\r\n    Notes?: string;\r\n    ReportsTo?: number;\r\n    PhotoPath?: string;\r\n    IsActive?: number;\r\n    TenantId?: number;\r\n    ReportsToFullName?: string;\r\n    ReportsToLastName?: string;\r\n    ReportsToFirstName?: string;\r\n    ReportsToTitle?: string;\r\n    ReportsToTitleOfCourtesy?: string;\r\n    ReportsToBirthDate?: string;\r\n    ReportsToHireDate?: string;\r\n    ReportsToAddress?: string;\r\n    ReportsToCity?: string;\r\n    ReportsToRegion?: string;\r\n    ReportsToPostalCode?: string;\r\n    ReportsToCountry?: string;\r\n    ReportsToHomePhone?: string;\r\n    ReportsToExtension?: string;\r\n    ReportsToPhoto?: number[];\r\n    ReportsToNotes?: string;\r\n    ReportsToReportsTo?: number;\r\n    ReportsToPhotoPath?: string;\r\n    Gender?: Gender;\r\n    InsertUserId?: number;\r\n    InsertDate?: string;\r\n    UpdateUserId?: number;\r\n    UpdateDate?: string;\r\n}\r\n\r\nexport abstract class EmployeesRow {\r\n    static readonly idProperty = 'EmployeeId';\r\n    static readonly isActiveProperty = 'IsActive';\r\n    static readonly nameProperty = 'LastName';\r\n    static readonly localTextPrefix = 'Store.Employees';\r\n    static readonly lookupKey = 'Store.Employees';\r\n\r\n    /** @deprecated use getLookupAsync instead */\r\n    static getLookup() { return getLookup<EmployeesRow>('Store.Employees') }\r\n    static async getLookupAsync() { return getLookupAsync<EmployeesRow>('Store.Employees') }\r\n\r\n    static readonly deletePermission = 'Store:General';\r\n    static readonly insertPermission = 'Store:General';\r\n    static readonly readPermission = 'Store:General';\r\n    static readonly updatePermission = 'Store:General';\r\n\r\n    static readonly Fields = fieldsProxy<EmployeesRow>();\r\n}\r\n", "\uFEFFimport { Decorators } from \"@serenity-is/corelib\";\r\n\r\nexport enum Gender {\r\n    Male = 1,\r\n    Female = 2\r\n}\r\nDecorators.registerEnumType(Gender, 'Store.Store.Gender', 'Store.Store.Entities.Gender');\r\n", "\uFEFFexport class MeasuresColumns {\r\n    static columnsKey = 'Store.Measures';\r\n}", "\uFEFFimport { StringEditor, PrefixedContext } from \"@serenity-is/corelib\";\r\nimport { initFormType } from \"@serenity-is/corelib/q\";\r\n\r\nexport interface MeasuresForm {\r\n    MeasureName: StringEditor;\r\n}\r\n\r\nexport class MeasuresForm extends PrefixedContext {\r\n    static formKey = 'Store.Measures';\r\n    private static init: boolean;\r\n\r\n    constructor(prefix: string) {\r\n        super(prefix);\r\n\r\n        if (!MeasuresForm.init)  {\r\n            MeasuresForm.init = true;\r\n\r\n            var w0 = StringEditor;\r\n\r\n            initFormType(MeasuresForm, [\r\n                'MeasureName', w0\r\n            ]);\r\n        }\r\n    }\r\n}\r\n", "\uFEFFimport { getLookup, getLookupAsync, fieldsProxy } from \"@serenity-is/corelib/q\";\r\n\r\nexport interface MeasuresRow {\r\n    MeasureId?: number;\r\n    MeasureName?: string;\r\n    IsActive?: number;\r\n    TenantId?: number;\r\n    InsertUserId?: number;\r\n    InsertDate?: string;\r\n    UpdateUserId?: number;\r\n    UpdateDate?: string;\r\n}\r\n\r\nexport abstract class MeasuresRow {\r\n    static readonly idProperty = 'MeasureId';\r\n    static readonly isActiveProperty = 'IsActive';\r\n    static readonly nameProperty = 'MeasureName';\r\n    static readonly localTextPrefix = 'Store.Measures';\r\n    static readonly lookupKey = 'Store.Measures';\r\n\r\n    /** @deprecated use getLookupAsync instead */\r\n    static getLookup() { return getLookup<MeasuresRow>('Store.Measures') }\r\n    static async getLookupAsync() { return getLookupAsync<MeasuresRow>('Store.Measures') }\r\n\r\n    static readonly deletePermission = 'Store:Measures:Delete';\r\n    static readonly insertPermission = 'Store:Measures:Modify';\r\n    static readonly readPermission = 'Store:Measures:View';\r\n    static readonly updatePermission = 'Store:Measures:Modify';\r\n\r\n    static readonly Fields = fieldsProxy<MeasuresRow>();\r\n}\r\n", "\uFEFFimport { SaveRequest, SaveResponse, DeleteRequest, DeleteResponse, RetrieveRequest, RetrieveResponse, ListRequest, ListResponse } from \"@serenity-is/corelib\";\r\nimport { MeasuresRow } from \"./MeasuresRow\";\r\nimport { ServiceOptions, serviceRequest } from \"@serenity-is/corelib/q\";\r\n\r\nexport namespace MeasuresService {\r\n    export const baseUrl = 'Store/Measures';\r\n\r\n    export declare function Create(request: SaveRequest<MeasuresRow>, onSuccess?: (response: SaveResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\r\n    export declare function Update(request: SaveRequest<MeasuresRow>, onSuccess?: (response: SaveResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\r\n    export declare function Delete(request: DeleteRequest, onSuccess?: (response: DeleteResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\r\n    export declare function Retrieve(request: RetrieveRequest, onSuccess?: (response: RetrieveResponse<MeasuresRow>) => void, opt?: ServiceOptions<any>): JQueryXHR;\r\n    export declare function List(request: ListRequest, onSuccess?: (response: ListResponse<MeasuresRow>) => void, opt?: ServiceOptions<any>): JQueryXHR;\r\n\r\n    export const Methods = {\r\n        Create: \"Store/Measures/Create\",\r\n        Update: \"Store/Measures/Update\",\r\n        Delete: \"Store/Measures/Delete\",\r\n        Retrieve: \"Store/Measures/Retrieve\",\r\n        List: \"Store/Measures/List\"\r\n    } as const;\r\n\r\n    [\r\n        'Create', \r\n        'Update', \r\n        'Delete', \r\n        'Retrieve', \r\n        'List'\r\n    ].forEach(x => {\r\n        (<any>MeasuresService)[x] = function (r, s, o) {\r\n            return serviceRequest(baseUrl + '/' + x, r, s, o);\r\n        };\r\n    });\r\n}\r\n", "\uFEFFimport { fieldsProxy } from \"@serenity-is/corelib/q\";\r\n\r\nexport interface NotesRow {\r\n    NoteId?: number;\r\n    EntityType?: string;\r\n    EntityId?: number;\r\n    Text?: string;\r\n    InsertUserId?: number;\r\n    InsertDate?: string;\r\n    InsertUserDisplayName?: string;\r\n}\r\n\r\nexport abstract class NotesRow {\r\n    static readonly idProperty = 'NoteId';\r\n    static readonly nameProperty = 'EntityType';\r\n    static readonly localTextPrefix = 'Store.Notes';\r\n    static readonly deletePermission = 'Store:General';\r\n    static readonly insertPermission = 'Store:General';\r\n    static readonly readPermission = 'Store:General';\r\n    static readonly updatePermission = 'Store:General';\r\n\r\n    static readonly Fields = fieldsProxy<NotesRow>();\r\n}\r\n", "\uFEFFimport { SaveRequest, SaveResponse, DeleteRequest, DeleteResponse, RetrieveRequest, RetrieveResponse, ListRequest, ListResponse } from \"@serenity-is/corelib\";\r\nimport { NotesRow } from \"./NotesRow\";\r\nimport { ServiceOptions, serviceRequest } from \"@serenity-is/corelib/q\";\r\n\r\nexport namespace NotesService {\r\n    export const baseUrl = 'Store/Notes';\r\n\r\n    export declare function Create(request: SaveRequest<NotesRow>, onSuccess?: (response: SaveResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\r\n    export declare function Update(request: SaveRequest<NotesRow>, onSuccess?: (response: SaveResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\r\n    export declare function Delete(request: DeleteRequest, onSuccess?: (response: DeleteResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\r\n    export declare function Retrieve(request: RetrieveRequest, onSuccess?: (response: RetrieveResponse<NotesRow>) => void, opt?: ServiceOptions<any>): JQueryXHR;\r\n    export declare function List(request: ListRequest, onSuccess?: (response: ListResponse<NotesRow>) => void, opt?: ServiceOptions<any>): JQueryXHR;\r\n\r\n    export const Methods = {\r\n        Create: \"Store/Notes/Create\",\r\n        Update: \"Store/Notes/Update\",\r\n        Delete: \"Store/Notes/Delete\",\r\n        Retrieve: \"Store/Notes/Retrieve\",\r\n        List: \"Store/Notes/List\"\r\n    } as const;\r\n\r\n    [\r\n        'Create', \r\n        'Update', \r\n        'Delete', \r\n        'Retrieve', \r\n        'List'\r\n    ].forEach(x => {\r\n        (<any>NotesService)[x] = function (r, s, o) {\r\n            return serviceRequest(baseUrl + '/' + x, r, s, o);\r\n        };\r\n    });\r\n}\r\n", "\uFEFFexport class OperationTypeColumns {\r\n    static columnsKey = 'Store.OperationType';\r\n}", "\uFEFFimport { IntegerEditor, StringEditor, PrefixedContext } from \"@serenity-is/corelib\";\r\nimport { initFormType } from \"@serenity-is/corelib/q\";\r\n\r\nexport interface OperationTypeForm {\r\n    OpCode: IntegerEditor;\r\n    Operation: StringEditor;\r\n}\r\n\r\nexport class OperationTypeForm extends PrefixedContext {\r\n    static formKey = 'Store.OperationType';\r\n    private static init: boolean;\r\n\r\n    constructor(prefix: string) {\r\n        super(prefix);\r\n\r\n        if (!OperationTypeForm.init)  {\r\n            OperationTypeForm.init = true;\r\n\r\n            var w0 = IntegerEditor;\r\n            var w1 = StringEditor;\r\n\r\n            initFormType(OperationTypeForm, [\r\n                'OpCode', w0,\r\n                'Operation', w1\r\n            ]);\r\n        }\r\n    }\r\n}\r\n", "\uFEFFimport { getLookup, getLookupAsync, fieldsProxy } from \"@serenity-is/corelib/q\";\r\n\r\nexport interface OperationTypeRow {\r\n    OperationTypeId?: number;\r\n    OpCode?: number;\r\n    Operation?: string;\r\n    IsActive?: number;\r\n    TenantId?: number;\r\n    InsertUserId?: number;\r\n    InsertDate?: string;\r\n    UpdateUserId?: number;\r\n    UpdateDate?: string;\r\n}\r\n\r\nexport abstract class OperationTypeRow {\r\n    static readonly idProperty = 'OperationTypeId';\r\n    static readonly isActiveProperty = 'IsActive';\r\n    static readonly nameProperty = 'Operation';\r\n    static readonly localTextPrefix = 'Store.OperationType';\r\n    static readonly lookupKey = 'Store.OperationType';\r\n\r\n    /** @deprecated use getLookupAsync instead */\r\n    static getLookup() { return getLookup<OperationTypeRow>('Store.OperationType') }\r\n    static async getLookupAsync() { return getLookupAsync<OperationTypeRow>('Store.OperationType') }\r\n\r\n    static readonly deletePermission = 'Store:OperationType:Delete';\r\n    static readonly insertPermission = 'Store:OperationType:Modify';\r\n    static readonly readPermission = 'Store:OperationType:View';\r\n    static readonly updatePermission = 'Store:OperationType:Modify';\r\n\r\n    static readonly Fields = fieldsProxy<OperationTypeRow>();\r\n}\r\n", "\uFEFFimport { SaveRequest, SaveResponse, DeleteRequest, DeleteResponse, RetrieveRequest, RetrieveResponse, ListRequest, ListResponse } from \"@serenity-is/corelib\";\r\nimport { OperationTypeRow } from \"./OperationTypeRow\";\r\nimport { ServiceOptions, serviceRequest } from \"@serenity-is/corelib/q\";\r\n\r\nexport namespace OperationTypeService {\r\n    export const baseUrl = 'Store/OperationType';\r\n\r\n    export declare function Create(request: SaveRequest<OperationTypeRow>, onSuccess?: (response: SaveResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\r\n    export declare function Update(request: SaveRequest<OperationTypeRow>, onSuccess?: (response: SaveResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\r\n    export declare function Delete(request: DeleteRequest, onSuccess?: (response: DeleteResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\r\n    export declare function Retrieve(request: RetrieveRequest, onSuccess?: (response: RetrieveResponse<OperationTypeRow>) => void, opt?: ServiceOptions<any>): JQueryXHR;\r\n    export declare function List(request: ListRequest, onSuccess?: (response: ListResponse<OperationTypeRow>) => void, opt?: ServiceOptions<any>): JQueryXHR;\r\n\r\n    export const Methods = {\r\n        Create: \"Store/OperationType/Create\",\r\n        Update: \"Store/OperationType/Update\",\r\n        Delete: \"Store/OperationType/Delete\",\r\n        Retrieve: \"Store/OperationType/Retrieve\",\r\n        List: \"Store/OperationType/List\"\r\n    } as const;\r\n\r\n    [\r\n        'Create', \r\n        'Update', \r\n        'Delete', \r\n        'Retrieve', \r\n        'List'\r\n    ].forEach(x => {\r\n        (<any>OperationTypeService)[x] = function (r, s, o) {\r\n            return serviceRequest(baseUrl + '/' + x, r, s, o);\r\n        };\r\n    });\r\n}\r\n", "\uFEFFexport namespace PermissionKeys {\r\n    export const General = \"Store:General\";\r\n\r\n    export namespace Categories {\r\n        export const Delete = \"Store:Categories:Delete\";\r\n        export const Modify = \"Store:Categories:Modify\";\r\n        export const View = \"Store:Categories:View\";\r\n    }\r\n\r\n    export namespace CategoriesType {\r\n        export const Delete = \"Store:CategoriesType:Delete\";\r\n        export const Modify = \"Store:CategoriesType:Modify\";\r\n        export const View = \"Store:CategoriesType:View\";\r\n    }\r\n\r\n    export namespace Shops {\r\n        export const Delete = \"Store:Shops:Delete\";\r\n        export const Modify = \"Store:Shops:Modify\";\r\n        export const View = \"Store:Shops:View\";\r\n    }\r\n\r\n    export namespace DocumentType {\r\n        export const Delete = \"Store:DocumentType:Delete\";\r\n        export const Modify = \"Store:DocumentType:Modify\";\r\n        export const View = \"Store:DocumentType:View\";\r\n    }\r\n\r\n    export namespace Measures {\r\n        export const Delete = \"Store:Measures:Delete\";\r\n        export const Modify = \"Store:Measures:Modify\";\r\n        export const View = \"Store:Measures:View\";\r\n    }\r\n\r\n    export namespace OperationType {\r\n        export const Delete = \"Store:OperationType:Delete\";\r\n        export const Modify = \"Store:OperationType:Modify\";\r\n        export const View = \"Store:OperationType:View\";\r\n    }\r\n\r\n    export namespace Counterparties {\r\n        export const Delete = \"Store:Counterparties:Delete\";\r\n        export const Modify = \"Store:Counterparties:Modify\";\r\n        export const View = \"Store:Counterparties:View\";\r\n    }\r\n\r\n    export namespace Wares {\r\n        export const Delete = \"Store:Wares:Delete\";\r\n        export const Modify = \"Store:Wares:Modify\";\r\n        export const View = \"Store:Wares:View\";\r\n    }\r\n\r\n    export namespace Product {\r\n        export const Delete = \"Store:Product:Delete\";\r\n        export const Modify = \"Store:Product:Modify\";\r\n        export const View = \"Store:Product:View\";\r\n    }\r\n}\r\n", "\uFEFFexport class ProductDetailsColumns {\r\n    static columnsKey = 'Store.ProductDetails';\r\n}", "\uFEFFimport { Decorators, EntityDialog } from '@serenity-is/corelib';\r\nimport { WaresForm, WaresRow, WaresService } from '../../ServerTypes/Store';\r\n\r\n@Decorators.registerClass('Store.Store.WaresDialog')\r\nexport class WaresDialog extends EntityDialog<WaresRow, any> {\r\n    protected getFormKey() { return WaresForm.formKey; }\r\n    protected getIdProperty() { return WaresRow.idProperty; }\r\n    protected getLocalTextPrefix() { return WaresRow.localTextPrefix; }\r\n    protected getNameProperty() { return WaresRow.nameProperty; }\r\n    protected getService() { return WaresService.baseUrl; }\r\n    protected getDeletePermission() { return WaresRow.deletePermission; }\r\n    protected getInsertPermission() { return WaresRow.insertPermission; }\r\n    protected getUpdatePermission() { return WaresRow.updatePermission; }\r\n\r\n    protected form = new WaresForm(this.idPrefix);\r\n}", "\uFEFFimport { WaresDialog } from \"@/Store/Wares/WaresDialog\";\r\nimport { LookupEditor, DecimalEditor, PrefixedContext } from \"@serenity-is/corelib\";\r\nimport { initFormType } from \"@serenity-is/corelib/q\";\r\n\r\nexport interface ProductDetailsForm {\r\n    WaresId: LookupEditor;\r\n    Quantity: DecimalEditor;\r\n    ProductQuantity: DecimalEditor;\r\n    PlanPrice: DecimalEditor;\r\n    Discount: DecimalEditor;\r\n}\r\n\r\nexport class ProductDetailsForm extends PrefixedContext {\r\n    static formKey = 'Store.ProductDetails';\r\n    private static init: boolean;\r\n\r\n    constructor(prefix: string) {\r\n        super(prefix);\r\n\r\n        if (!ProductDetailsForm.init)  {\r\n            ProductDetailsForm.init = true;\r\n\r\n            var w0 = LookupEditor;\r\n            var w1 = DecimalEditor;\r\n\r\n            initFormType(ProductDetailsForm, [\r\n                'WaresId', w0,\r\n                'Quantity', w1,\r\n                'ProductQuantity', w1,\r\n                'PlanPrice', w1,\r\n                'Discount', w1\r\n            ]);\r\n        }\r\n    }\r\n}\r\n\r\n[WaresDialog]; // referenced types\r\n", "\uFEFFimport { fieldsProxy } from \"@serenity-is/corelib/q\";\r\n\r\nexport interface ProductDetailsRow {\r\n    DetailId?: number;\r\n    ProductId?: number;\r\n    WaresId?: number;\r\n    PlanPrice?: number;\r\n    Quantity?: number;\r\n    ProductQuantity?: number;\r\n    Discount?: number;\r\n    IsActive?: number;\r\n    TenantId?: number;\r\n    ProductName?: string;\r\n    ProductCategoryId?: number;\r\n    ProductQuantityPerUnit?: string;\r\n    ProductUnitPrice?: number;\r\n    ProductUnitsInStock?: number;\r\n    ProductUnitsOnOrder?: number;\r\n    ProductReorderLevel?: number;\r\n    ProductDiscontinued?: boolean;\r\n    WaresCode?: string;\r\n    WaresBarcode?: string;\r\n    WaresLabel?: string;\r\n    WaresName?: string;\r\n    WaresImage?: string;\r\n    WaresCategoryId?: number;\r\n    WaresMeasureId?: number;\r\n    WaresQuantityPerUnit?: number;\r\n    WaresUnitPrice?: number;\r\n    WaresDiscontinued?: boolean;\r\n    WaresAccountId?: number;\r\n    LineTotal?: number;\r\n    InsertUserId?: number;\r\n    InsertDate?: string;\r\n    UpdateUserId?: number;\r\n    UpdateDate?: string;\r\n}\r\n\r\nexport abstract class ProductDetailsRow {\r\n    static readonly idProperty = 'DetailId';\r\n    static readonly isActiveProperty = 'IsActive';\r\n    static readonly localTextPrefix = 'Store.ProductDetails';\r\n    static readonly deletePermission = 'Store:Product:Delete';\r\n    static readonly insertPermission = 'Store:Product:View';\r\n    static readonly readPermission = 'Store:Product:View';\r\n    static readonly updatePermission = 'Store:Product:View';\r\n\r\n    static readonly Fields = fieldsProxy<ProductDetailsRow>();\r\n}\r\n", "import { RetrieveRequest, RetrieveResponse, ListRequest, ListResponse } from \"@serenity-is/corelib\";\r\nimport { ProductDetailsRow } from \"./ProductDetailsRow\";\r\nimport { ServiceOptions, serviceRequest } from \"@serenity-is/corelib/q\";\r\n\r\nexport namespace ProductDetailsService {\r\n    export const baseUrl = 'Store/ProductDetails';\r\n\r\n    export declare function Retrieve(request: RetrieveRequest, onSuccess?: (response: RetrieveResponse<ProductDetailsRow>) => void, opt?: ServiceOptions<any>): JQueryXHR;\r\n    export declare function List(request: ListRequest, onSuccess?: (response: ListResponse<ProductDetailsRow>) => void, opt?: ServiceOptions<any>): JQueryXHR;\r\n\r\n    export const Methods = {\r\n        Retrieve: \"Store/ProductDetails/Retrieve\",\r\n        List: \"Store/ProductDetails/List\"\r\n    } as const;\r\n\r\n    [\r\n        'Retrieve', \r\n        'List'\r\n    ].forEach(x => {\r\n        (<any>ProductDetailsService)[x] = function (r, s, o) {\r\n            return serviceRequest(baseUrl + '/' + x, r, s, o);\r\n        };\r\n    });\r\n}\r\n", "\uFEFFimport { fieldsProxy } from \"@serenity-is/corelib/q\";\r\n\r\nexport interface ProductLangRow {\r\n    Id?: number;\r\n    ProductId?: number;\r\n    LanguageId?: number;\r\n    ProductName?: string;\r\n}\r\n\r\nexport abstract class ProductLangRow {\r\n    static readonly idProperty = 'Id';\r\n    static readonly nameProperty = 'ProductName';\r\n    static readonly localTextPrefix = 'Store.ProductLang';\r\n    static readonly deletePermission = 'Store:General';\r\n    static readonly insertPermission = 'Store:General';\r\n    static readonly readPermission = 'Store:General';\r\n    static readonly updatePermission = 'Store:General';\r\n\r\n    static readonly Fields = fieldsProxy<ProductLangRow>();\r\n}\r\n", "\uFEFFimport { SaveRequest, SaveResponse, DeleteRequest, DeleteResponse, RetrieveRequest, RetrieveResponse, ListRequest, ListResponse } from \"@serenity-is/corelib\";\r\nimport { ProductLangRow } from \"./ProductLangRow\";\r\nimport { ServiceOptions, serviceRequest } from \"@serenity-is/corelib/q\";\r\n\r\nexport namespace ProductLangService {\r\n    export const baseUrl = 'Store/ProductLang';\r\n\r\n    export declare function Create(request: SaveRequest<ProductLangRow>, onSuccess?: (response: SaveResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\r\n    export declare function Update(request: SaveRequest<ProductLangRow>, onSuccess?: (response: SaveResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\r\n    export declare function Delete(request: DeleteRequest, onSuccess?: (response: DeleteResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\r\n    export declare function Retrieve(request: RetrieveRequest, onSuccess?: (response: RetrieveResponse<ProductLangRow>) => void, opt?: ServiceOptions<any>): JQueryXHR;\r\n    export declare function List(request: ListRequest, onSuccess?: (response: ListResponse<ProductLangRow>) => void, opt?: ServiceOptions<any>): JQueryXHR;\r\n\r\n    export const Methods = {\r\n        Create: \"Store/ProductLang/Create\",\r\n        Update: \"Store/ProductLang/Update\",\r\n        Delete: \"Store/ProductLang/Delete\",\r\n        Retrieve: \"Store/ProductLang/Retrieve\",\r\n        List: \"Store/ProductLang/List\"\r\n    } as const;\r\n\r\n    [\r\n        'Create', \r\n        'Update', \r\n        'Delete', \r\n        'Retrieve', \r\n        'List'\r\n    ].forEach(x => {\r\n        (<any>ProductLangService)[x] = function (r, s, o) {\r\n            return serviceRequest(baseUrl + '/' + x, r, s, o);\r\n        };\r\n    });\r\n}\r\n", "\uFEFFexport class ProductsColumns {\r\n    static columnsKey = 'Store.Products';\r\n}", "import { Decorators, EntityDialog } from '@serenity-is/corelib';\r\nimport { CategoriesForm, CategoriesRow, CategoriesService } from '../../ServerTypes/Store';\r\n\r\n@Decorators.registerClass('Store.Store.CategoriesDialog')\r\n export class CategoriesDialog extends EntityDialog<CategoriesRow, any> {\r\n    protected getFormKey() { return CategoriesForm.formKey; }\r\n    protected getIdProperty() { return CategoriesRow.idProperty; }\r\n    protected getLocalTextPrefix() { return CategoriesRow.localTextPrefix; }\r\n    protected getNameProperty() { return CategoriesRow.nameProperty; }\r\n    protected getService() { return CategoriesService.baseUrl; }\r\n    protected getDeletePermission() { return CategoriesRow.deletePermission; }\r\n    protected getInsertPermission() { return CategoriesRow.insertPermission; }\r\n    protected getUpdatePermission() { return CategoriesRow.updatePermission; }\r\n\r\n    protected form = new CategoriesForm(this.idPrefix);\r\n}", "\uFEFFimport { CategoriesDialog } from \"@/Store/Categories/CategoriesDialog\";\r\nimport { LookupEditor, StringEditor, ImageUploadEditor, BooleanEditor, DecimalEditor, IntegerEditor, PrefixedContext } from \"@serenity-is/corelib\";\r\nimport { MeasuresDialog } from \"@/Store/Measures/MeasuresDialog\";\r\nimport { ProductDetailsEditor } from \"@/Store/ProductDetails/ProductDetailsEditor\";\r\nimport { initFormType } from \"@serenity-is/corelib/q\";\r\n\r\nexport interface ProductsForm {\r\n    CategoryId: LookupEditor;\r\n    ProductName: StringEditor;\r\n    ProductCode: StringEditor;\r\n    ProductBarcode: StringEditor;\r\n    ProductLabel: StringEditor;\r\n    MeasureId: LookupEditor;\r\n    ProductImage: ImageUploadEditor;\r\n    Discontinued: BooleanEditor;\r\n    UnitPrice: DecimalEditor;\r\n    QuantityPerUnit: StringEditor;\r\n    DetailList: ProductDetailsEditor;\r\n    UnitsInStock: IntegerEditor;\r\n    UnitsOnOrder: IntegerEditor;\r\n    ReorderLevel: IntegerEditor;\r\n}\r\n\r\nexport class ProductsForm extends PrefixedContext {\r\n    static formKey = 'Store.Products';\r\n    private static init: boolean;\r\n\r\n    constructor(prefix: string) {\r\n        super(prefix);\r\n\r\n        if (!ProductsForm.init)  {\r\n            ProductsForm.init = true;\r\n\r\n            var w0 = LookupEditor;\r\n            var w1 = StringEditor;\r\n            var w2 = ImageUploadEditor;\r\n            var w3 = BooleanEditor;\r\n            var w4 = DecimalEditor;\r\n            var w5 = ProductDetailsEditor;\r\n            var w6 = IntegerEditor;\r\n\r\n            initFormType(ProductsForm, [\r\n                'CategoryId', w0,\r\n                'ProductName', w1,\r\n                'ProductCode', w1,\r\n                'ProductBarcode', w1,\r\n                'ProductLabel', w1,\r\n                'MeasureId', w0,\r\n                'ProductImage', w2,\r\n                'Discontinued', w3,\r\n                'UnitPrice', w4,\r\n                'QuantityPerUnit', w1,\r\n                'DetailList', w5,\r\n                'UnitsInStock', w6,\r\n                'UnitsOnOrder', w6,\r\n                'ReorderLevel', w6\r\n            ]);\r\n        }\r\n    }\r\n}\r\n\r\n[CategoriesDialog, MeasuresDialog]; // referenced types\r\n", "\uFEFFimport { Decorators, EntityDialog } from '@serenity-is/corelib';\r\nimport { MeasuresForm, MeasuresRow, MeasuresService } from '../../ServerTypes/Store';\r\n\r\n@Decorators.registerClass('Store.Store.MeasuresDialog')\r\nexport class MeasuresDialog extends EntityDialog<MeasuresRow, any> {\r\n    protected getFormKey() { return MeasuresForm.formKey; }\r\n    protected getIdProperty() { return MeasuresRow.idProperty; }\r\n    protected getLocalTextPrefix() { return MeasuresRow.localTextPrefix; }\r\n    protected getNameProperty() { return MeasuresRow.nameProperty; }\r\n    protected getService() { return MeasuresService.baseUrl; }\r\n    protected getDeletePermission() { return MeasuresRow.deletePermission; }\r\n    protected getInsertPermission() { return MeasuresRow.insertPermission; }\r\n    protected getUpdatePermission() { return MeasuresRow.updatePermission; }\r\n\r\n    protected form = new MeasuresForm(this.idPrefix);\r\n}", "\r\nimport { Decorators } from \"@serenity-is/corelib\";\r\nimport { alertDialog, toId, tryFirst, Lookup} from \"@serenity-is/corelib/q\";\r\nimport { GridEditorBase } from \"@serenity-is/extensions\";\r\nimport { ProductDetailsColumns, ProductDetailsRow, WaresRow } from '../../ServerTypes/Store';\r\nimport { ProductDetailsDialog } from \"./ProductDetailsDialog\";\r\n\r\n\r\n\r\n@Decorators.registerEditor(\"Store.Store.ProductDetailsEditor\")\r\nexport class ProductDetailsEditor extends GridEditorBase<ProductDetailsRow> {\r\n    protected getColumnsKey() { return ProductDetailsColumns.columnsKey; }\r\n    protected getDialogType() { return ProductDetailsDialog; }\r\n    protected getLocalTextPrefix() { return ProductDetailsRow.localTextPrefix; }\r\n\r\n    constructor(container: JQuery) {\r\n        super(container)\r\n    }\r\n\r\n    protected getLookupKey() {\r\n        return WaresRow.lookupKey;\r\n    }\r\n\r\n    validateEntity(row, id) {\r\n        row.WaresId = toId(row.WaresId);\r\n\r\n        var sameWares = tryFirst(this.view.getItems(), x => x.WaresId === row.WaresId);\r\n        if (sameWares && this.id(sameWares) !== id) {\r\n            alertDialog('This wares is already in order details!');\r\n            return false;\r\n        }\r\n\r\n        row.WaresName = WaresRow.getLookup().itemById[row.WaresId].WaresName;\r\n        row.LineTotal = (row.Quantity || 0) * (row.UnitPrice || 0) - (row.Discount || 0);\r\n        return true;\r\n    }\r\n\r\n    //protected getItemText(item: WaresRow, lookup: Lookup<WaresRow>) {\r\n    //    return super.getItemText(item, lookup) +\r\n    //        ' (' +\r\n    //        '$' + formatNumber(item.UnitPrice, '#, ##0.0000') +\r\n    //        //', ' + (item.UnitsInStock > 0 ? (item.UnitsInStock + ' in stock') : 'out of stock') +\r\n    //        //', ' + (item.SupplierCompanyName || 'Unknown') +\r\n    //        ')';\r\n    //}\r\n}\r\n", "import { Decorators } from '@serenity-is/corelib';\r\nimport { toId } from \"@serenity-is/corelib/q\";\r\nimport { GridEditorDialog } from \"@serenity-is/extensions\";\r\nimport { ProductDetailsForm, ProductDetailsRow, WaresRow } from '../../ServerTypes/Store';\r\n\r\n@Decorators.registerClass()\r\nexport class ProductDetailsDialog extends GridEditorDialog<ProductDetailsRow> {\r\n    protected getFormKey() { return ProductDetailsForm.formKey; }\r\n    protected getLocalTextPrefix() { return ProductDetailsRow.localTextPrefix; }\r\n\r\n    //protected form = new ProductDetailsForm(this.idPrefix);\r\n    protected form: ProductDetailsForm;\r\n\r\n    constructor() {\r\n        super();\r\n\r\n        this.form = new ProductDetailsForm(this.idPrefix);\r\n\r\n        this.form.WaresId.changeSelect2(e => {\r\n            var itemID = toId(this.form.WaresId.value);\r\n            if (itemID != null) {\r\n                this.form.PlanPrice.value = WaresRow.getLookup().itemById[itemID].UnitPrice;\r\n            }\r\n        });\r\n\r\n        this.form.Discount.addValidationRule(this.uniqueName, e => {\r\n            var price = this.form.PlanPrice.value;\r\n            var quantity = this.form.Quantity.value;\r\n            var quanprod = this.form.ProductQuantity.value;\r\n            var discount = this.form.Discount.value;\r\n            if (price != null && quantity != null && quanprod != null && discount != null &&\r\n                discount > 0 && discount >= price * quantity / quanprod) {\r\n                return \"Discount can't be higher than total price!\";\r\n            }\r\n        });\r\n    }\r\n\r\n    protected updateInterface() {\r\n        super.updateInterface();\r\n        //this.toolbar.findButton('apply-changes-button').hide();\r\n        //this.toolbar.findButton('save-and-close-button').hide();\r\n    }\r\n}", "\uFEFFimport { CaptureOperationType } from \"@serenity-is/corelib\";\r\nimport { fieldsProxy } from \"@serenity-is/corelib/q\";\r\n\r\nexport interface ProductsLogRow {\r\n    ProductLogId?: number;\r\n    OperationType?: CaptureOperationType;\r\n    ChangingUserId?: number;\r\n    ValidFrom?: string;\r\n    ValidUntil?: string;\r\n    ProductId?: number;\r\n    ProductName?: string;\r\n    ProductImage?: string;\r\n    Discontinued?: boolean;\r\n    CategoryId?: number;\r\n    QuantityPerUnit?: string;\r\n    UnitPrice?: number;\r\n    UnitsInStock?: number;\r\n    UnitsOnOrder?: number;\r\n    ReorderLevel?: number;\r\n}\r\n\r\nexport abstract class ProductsLogRow {\r\n    static readonly idProperty = 'ProductLogId';\r\n    static readonly localTextPrefix = 'Store.ProductsLog';\r\n    static readonly deletePermission = null;\r\n    static readonly insertPermission = null;\r\n    static readonly readPermission = '';\r\n    static readonly updatePermission = null;\r\n\r\n    static readonly Fields = fieldsProxy<ProductsLogRow>();\r\n}\r\n", "\uFEFFimport { ProductDetailsRow } from \"./ProductDetailsRow\";\r\nimport { getLookup, getLookupAsync, fieldsProxy } from \"@serenity-is/corelib/q\";\r\n\r\nexport interface ProductsRow {\r\n    ProductId?: number;\r\n    ProductCode?: string;\r\n    ProductBarcode?: string;\r\n    ProductLabel?: string;\r\n    ProductName?: string;\r\n    ProductImage?: string;\r\n    CategoryId?: number;\r\n    MeasureId?: number;\r\n    MeasureMeasureName?: string;\r\n    QuantityPerUnit?: string;\r\n    UnitPrice?: number;\r\n    UnitsInStock?: number;\r\n    UnitsOnOrder?: number;\r\n    ReorderLevel?: number;\r\n    Discontinued?: boolean;\r\n    IsActive?: number;\r\n    TenantId?: number;\r\n    CategoryCategoryName?: string;\r\n    CategoryDescription?: string;\r\n    DetailList?: ProductDetailsRow[];\r\n    InsertUserId?: number;\r\n    InsertDate?: string;\r\n    UpdateUserId?: number;\r\n    UpdateDate?: string;\r\n}\r\n\r\nexport abstract class ProductsRow {\r\n    static readonly idProperty = 'ProductId';\r\n    static readonly isActiveProperty = 'IsActive';\r\n    static readonly nameProperty = 'ProductName';\r\n    static readonly localTextPrefix = 'Store.Products';\r\n    static readonly lookupKey = 'Store.Product';\r\n\r\n    /** @deprecated use getLookupAsync instead */\r\n    static getLookup() { return getLookup<ProductsRow>('Store.Product') }\r\n    static async getLookupAsync() { return getLookupAsync<ProductsRow>('Store.Product') }\r\n\r\n    static readonly deletePermission = 'Store:Product:Delete';\r\n    static readonly insertPermission = 'Store:Product:Modify';\r\n    static readonly readPermission = 'Store:Product:View';\r\n    static readonly updatePermission = 'Store:Product:Modify';\r\n\r\n    static readonly Fields = fieldsProxy<ProductsRow>();\r\n}\r\n", "\uFEFFimport { SaveRequest, SaveResponse, DeleteRequest, DeleteResponse, RetrieveRequest, RetrieveResponse, ListResponse } from \"@serenity-is/corelib\";\r\nimport { ProductsRow } from \"./ProductsRow\";\r\nimport { ServiceOptions, serviceRequest } from \"@serenity-is/corelib/q\";\r\nimport { ProductsListRequest } from \"./ProductsListRequest\";\r\n\r\nexport namespace ProductsService {\r\n    export const baseUrl = 'Store/Products';\r\n\r\n    export declare function Create(request: SaveRequest<ProductsRow>, onSuccess?: (response: SaveResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\r\n    export declare function Update(request: SaveRequest<ProductsRow>, onSuccess?: (response: SaveResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\r\n    export declare function Delete(request: DeleteRequest, onSuccess?: (response: DeleteResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\r\n    export declare function Retrieve(request: RetrieveRequest, onSuccess?: (response: RetrieveResponse<ProductsRow>) => void, opt?: ServiceOptions<any>): JQueryXHR;\r\n    export declare function List(request: ProductsListRequest, onSuccess?: (response: ListResponse<ProductsRow>) => void, opt?: ServiceOptions<any>): JQueryXHR;\r\n\r\n    export const Methods = {\r\n        Create: \"Store/Products/Create\",\r\n        Update: \"Store/Products/Update\",\r\n        Delete: \"Store/Products/Delete\",\r\n        Retrieve: \"Store/Products/Retrieve\",\r\n        List: \"Store/Products/List\"\r\n    } as const;\r\n\r\n    [\r\n        'Create', \r\n        'Update', \r\n        'Delete', \r\n        'Retrieve', \r\n        'List'\r\n    ].forEach(x => {\r\n        (<any>ProductsService)[x] = function (r, s, o) {\r\n            return serviceRequest(baseUrl + '/' + x, r, s, o);\r\n        };\r\n    });\r\n}\r\n", "\uFEFFexport class ShippersColumns {\r\n    static columnsKey = 'Store.Shippers';\r\n}", "\uFEFFimport { StringEditor, PrefixedContext } from \"@serenity-is/corelib\";\r\nimport { initFormType } from \"@serenity-is/corelib/q\";\r\n\r\nexport interface ShippersForm {\r\n    CompanyName: StringEditor;\r\n    Phone: StringEditor;\r\n}\r\n\r\nexport class ShippersForm extends PrefixedContext {\r\n    static formKey = 'Store.Shippers';\r\n    private static init: boolean;\r\n\r\n    constructor(prefix: string) {\r\n        super(prefix);\r\n\r\n        if (!ShippersForm.init)  {\r\n            ShippersForm.init = true;\r\n\r\n            var w0 = StringEditor;\r\n\r\n            initFormType(ShippersForm, [\r\n                'CompanyName', w0,\r\n                'Phone', w0\r\n            ]);\r\n        }\r\n    }\r\n}\r\n", "\uFEFFimport { getLookup, getLookupAsync, fieldsProxy } from \"@serenity-is/corelib/q\";\r\n\r\nexport interface ShippersRow {\r\n    ShipperId?: number;\r\n    CompanyName?: string;\r\n    Phone?: string;\r\n    IsActive?: number;\r\n    TenantId?: number;\r\n    InsertUserId?: number;\r\n    InsertDate?: string;\r\n    UpdateUserId?: number;\r\n    UpdateDate?: string;\r\n}\r\n\r\nexport abstract class ShippersRow {\r\n    static readonly idProperty = 'ShipperId';\r\n    static readonly isActiveProperty = 'IsActive';\r\n    static readonly nameProperty = 'CompanyName';\r\n    static readonly localTextPrefix = 'Store.Shippers';\r\n    static readonly lookupKey = 'Store.Shipper';\r\n\r\n    /** @deprecated use getLookupAsync instead */\r\n    static getLookup() { return getLookup<ShippersRow>('Store.Shipper') }\r\n    static async getLookupAsync() { return getLookupAsync<ShippersRow>('Store.Shipper') }\r\n\r\n    static readonly deletePermission = 'Store:General';\r\n    static readonly insertPermission = 'Store:General';\r\n    static readonly readPermission = 'Store:General';\r\n    static readonly updatePermission = 'Store:General';\r\n\r\n    static readonly Fields = fieldsProxy<ShippersRow>();\r\n}\r\n", "\uFEFFimport { SaveRequest, SaveResponse, DeleteRequest, DeleteResponse, RetrieveRequest, RetrieveResponse, ListRequest, ListResponse } from \"@serenity-is/corelib\";\r\nimport { ShippersRow } from \"./ShippersRow\";\r\nimport { ServiceOptions, serviceRequest } from \"@serenity-is/corelib/q\";\r\n\r\nexport namespace ShippersService {\r\n    export const baseUrl = 'Store/Shippers';\r\n\r\n    export declare function Create(request: SaveRequest<ShippersRow>, onSuccess?: (response: SaveResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\r\n    export declare function Update(request: SaveRequest<ShippersRow>, onSuccess?: (response: SaveResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\r\n    export declare function Delete(request: DeleteRequest, onSuccess?: (response: DeleteResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\r\n    export declare function Retrieve(request: RetrieveRequest, onSuccess?: (response: RetrieveResponse<ShippersRow>) => void, opt?: ServiceOptions<any>): JQueryXHR;\r\n    export declare function List(request: ListRequest, onSuccess?: (response: ListResponse<ShippersRow>) => void, opt?: ServiceOptions<any>): JQueryXHR;\r\n\r\n    export const Methods = {\r\n        Create: \"Store/Shippers/Create\",\r\n        Update: \"Store/Shippers/Update\",\r\n        Delete: \"Store/Shippers/Delete\",\r\n        Retrieve: \"Store/Shippers/Retrieve\",\r\n        List: \"Store/Shippers/List\"\r\n    } as const;\r\n\r\n    [\r\n        'Create', \r\n        'Update', \r\n        'Delete', \r\n        'Retrieve', \r\n        'List'\r\n    ].forEach(x => {\r\n        (<any>ShippersService)[x] = function (r, s, o) {\r\n            return serviceRequest(baseUrl + '/' + x, r, s, o);\r\n        };\r\n    });\r\n}\r\n", "\uFEFFexport class ShopsColumns {\r\n    static columnsKey = 'Store.Shops';\r\n}", "\uFEFFimport { StringEditor, PrefixedContext } from \"@serenity-is/corelib\";\r\nimport { initFormType } from \"@serenity-is/corelib/q\";\r\n\r\nexport interface ShopsForm {\r\n    ShopId: StringEditor;\r\n    ShopName: StringEditor;\r\n    ContactName: StringEditor;\r\n    ContactTitle: StringEditor;\r\n    Address: StringEditor;\r\n    City: StringEditor;\r\n    Region: StringEditor;\r\n    PostalCode: StringEditor;\r\n    Country: StringEditor;\r\n    Phone: StringEditor;\r\n}\r\n\r\nexport class ShopsForm extends PrefixedContext {\r\n    static formKey = 'Store.Shops';\r\n    private static init: boolean;\r\n\r\n    constructor(prefix: string) {\r\n        super(prefix);\r\n\r\n        if (!ShopsForm.init)  {\r\n            ShopsForm.init = true;\r\n\r\n            var w0 = StringEditor;\r\n\r\n            initFormType(ShopsForm, [\r\n                'ShopId', w0,\r\n                'ShopName', w0,\r\n                'ContactName', w0,\r\n                'ContactTitle', w0,\r\n                'Address', w0,\r\n                'City', w0,\r\n                'Region', w0,\r\n                'PostalCode', w0,\r\n                'Country', w0,\r\n                'Phone', w0\r\n            ]);\r\n        }\r\n    }\r\n}\r\n", "\uFEFFimport { getLookup, getLookupAsync, fieldsProxy } from \"@serenity-is/corelib/q\";\r\n\r\nexport interface ShopsRow {\r\n    Id?: number;\r\n    ShopId?: string;\r\n    ShopName?: string;\r\n    ContactName?: string;\r\n    ContactTitle?: string;\r\n    Address?: string;\r\n    City?: string;\r\n    Region?: string;\r\n    PostalCode?: string;\r\n    Country?: string;\r\n    Phone?: string;\r\n    IsActive?: number;\r\n    TenantId?: number;\r\n    InsertUserId?: number;\r\n    InsertDate?: string;\r\n    UpdateUserId?: number;\r\n    UpdateDate?: string;\r\n}\r\n\r\nexport abstract class ShopsRow {\r\n    static readonly idProperty = 'Id';\r\n    static readonly isActiveProperty = 'IsActive';\r\n    static readonly nameProperty = 'ShopId';\r\n    static readonly localTextPrefix = 'Store.Shops';\r\n    static readonly lookupKey = 'Store.Shops';\r\n\r\n    /** @deprecated use getLookupAsync instead */\r\n    static getLookup() { return getLookup<ShopsRow>('Store.Shops') }\r\n    static async getLookupAsync() { return getLookupAsync<ShopsRow>('Store.Shops') }\r\n\r\n    static readonly deletePermission = 'Store:Shops:Delete';\r\n    static readonly insertPermission = 'Store:Shops:Modify';\r\n    static readonly readPermission = 'Store:Shops:View';\r\n    static readonly updatePermission = 'Store:Shops:Modify';\r\n\r\n    static readonly Fields = fieldsProxy<ShopsRow>();\r\n}\r\n", "\uFEFFimport { SaveRequest, SaveResponse, DeleteRequest, DeleteResponse, RetrieveRequest, RetrieveResponse, ListRequest, ListResponse } from \"@serenity-is/corelib\";\r\nimport { ShopsRow } from \"./ShopsRow\";\r\nimport { ServiceOptions, serviceRequest } from \"@serenity-is/corelib/q\";\r\n\r\nexport namespace ShopsService {\r\n    export const baseUrl = 'Store/Shops';\r\n\r\n    export declare function Create(request: SaveRequest<ShopsRow>, onSuccess?: (response: SaveResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\r\n    export declare function Update(request: SaveRequest<ShopsRow>, onSuccess?: (response: SaveResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\r\n    export declare function Delete(request: DeleteRequest, onSuccess?: (response: DeleteResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\r\n    export declare function Retrieve(request: RetrieveRequest, onSuccess?: (response: RetrieveResponse<ShopsRow>) => void, opt?: ServiceOptions<any>): JQueryXHR;\r\n    export declare function List(request: ListRequest, onSuccess?: (response: ListResponse<ShopsRow>) => void, opt?: ServiceOptions<any>): JQueryXHR;\r\n\r\n    export const Methods = {\r\n        Create: \"Store/Shops/Create\",\r\n        Update: \"Store/Shops/Update\",\r\n        Delete: \"Store/Shops/Delete\",\r\n        Retrieve: \"Store/Shops/Retrieve\",\r\n        List: \"Store/Shops/List\"\r\n    } as const;\r\n\r\n    [\r\n        'Create', \r\n        'Update', \r\n        'Delete', \r\n        'Retrieve', \r\n        'List'\r\n    ].forEach(x => {\r\n        (<any>ShopsService)[x] = function (r, s, o) {\r\n            return serviceRequest(baseUrl + '/' + x, r, s, o);\r\n        };\r\n    });\r\n}\r\n", "\uFEFFexport class WaresColumns {\r\n    static columnsKey = 'Store.Wares';\r\n}", "\uFEFFimport { CategoriesDialog } from \"@/Store/Categories/CategoriesDialog\";\r\nimport { LookupEditor, StringEditor, IntegerEditor, ImageUploadEditor, BooleanEditor, DecimalEditor, PrefixedContext } from \"@serenity-is/corelib\";\r\nimport { CounterpartiesDialog } from \"@/Store/Counterparties/CounterpartiesDialog\";\r\nimport { initFormType } from \"@serenity-is/corelib/q\";\r\n\r\nexport interface WaresForm {\r\n    CategoryId: LookupEditor;\r\n    WaresCode: StringEditor;\r\n    WaresBarcode: StringEditor;\r\n    WaresLabel: StringEditor;\r\n    WaresName: StringEditor;\r\n    MeasureId: IntegerEditor;\r\n    WaresImage: ImageUploadEditor;\r\n    Discontinued: BooleanEditor;\r\n    CounterpartyId: LookupEditor;\r\n    QuantityPerUnit: DecimalEditor;\r\n    UnitPrice: DecimalEditor;\r\n    AccountId: IntegerEditor;\r\n}\r\n\r\nexport class WaresForm extends PrefixedContext {\r\n    static formKey = 'Store.Wares';\r\n    private static init: boolean;\r\n\r\n    constructor(prefix: string) {\r\n        super(prefix);\r\n\r\n        if (!WaresForm.init)  {\r\n            WaresForm.init = true;\r\n\r\n            var w0 = LookupEditor;\r\n            var w1 = StringEditor;\r\n            var w2 = IntegerEditor;\r\n            var w3 = ImageUploadEditor;\r\n            var w4 = BooleanEditor;\r\n            var w5 = DecimalEditor;\r\n\r\n            initFormType(WaresForm, [\r\n                'CategoryId', w0,\r\n                'WaresCode', w1,\r\n                'WaresBarcode', w1,\r\n                'WaresLabel', w1,\r\n                'WaresName', w1,\r\n                'MeasureId', w2,\r\n                'WaresImage', w3,\r\n                'Discontinued', w4,\r\n                'CounterpartyId', w0,\r\n                'QuantityPerUnit', w5,\r\n                'UnitPrice', w5,\r\n                'AccountId', w2\r\n            ]);\r\n        }\r\n    }\r\n}\r\n\r\n[CategoriesDialog, CounterpartiesDialog]; // referenced types\r\n", "import { Decorators, EntityDialog } from '@serenity-is/corelib';\r\nimport { htmlEncode, reloadLookup, localText } from \"@serenity-is/corelib/q\";\r\nimport { DialogUtils } from \"@serenity-is/extensions\";\r\nimport { CounterpartiesForm, CounterpartiesRow, CounterpartiesService } from '../../ServerTypes/Store';\r\nimport { CounterpartiesGrid } from \"./CounterpartiesGrid\"\r\n\r\n@Decorators.registerClass('Store.Store.CounterpartiesDialog')\r\n@Decorators.panel()\r\nexport class CounterpartiesDialog extends EntityDialog<CounterpartiesRow, any> {\r\n    protected getFormKey() { return CounterpartiesForm.formKey; }\r\n    protected getIdProperty() { return CounterpartiesRow.idProperty; }\r\n    protected getLocalTextPrefix() { return CounterpartiesRow.localTextPrefix; }\r\n    protected getNameProperty() { return CounterpartiesRow.nameProperty; }\r\n    protected getService() { return CounterpartiesService.baseUrl; }\r\n    protected getDeletePermission() { return CounterpartiesRow.deletePermission; }\r\n    protected getInsertPermission() { return CounterpartiesRow.insertPermission; }\r\n    protected getUpdatePermission() { return CounterpartiesRow.updatePermission; }\r\n\r\n    protected form = new CounterpartiesForm(this.idPrefix);\r\n\r\n    //private ProductMoveGrid: CounterpartiesProductMovementGrid;\r\n    //private WaresMoveGrid: CounterpartiesWaresMovementGrid;\r\n    private loadedState: string;\r\n\r\n    constructor() {\r\n        super();\r\n\r\n        //this.ProductMoveGrid = new CounterpartiesProductMovementGrid(this.byId('ProductMovementGrid'));\r\n        //this.WaresMoveGrid = new CounterpartiesWaresMovementGrid(this.byId('WaresMovementGrid'));\r\n        /// force order dialog to open in Dialog mode instead of Panel mode\r\n        /// which is set as default on OrderDialog with @panelAttribute\r\n        //this.ProductMoveGrid.openDialogsAsPanel = false;\r\n        //this.WaresMoveGrid.openDialogsAsPanel = false;\r\n\r\n        this.byId('NotesList').closest('.field').hide().end().appendTo(this.byId('TabNotes'));\r\n        DialogUtils.pendingChangesConfirmation(this.element, () => this.getSaveState() != this.loadedState);\r\n    }\r\n\r\n    getSaveState() {\r\n        try {\r\n            return $.toJSON(this.getSaveEntity());\r\n        }\r\n        catch (e) {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    loadResponse(data) {\r\n        super.loadResponse(data);\r\n        this.loadedState = this.getSaveState();\r\n    }\r\n\r\n    loadEntity(entity: CounterpartiesRow) {\r\n        super.loadEntity(entity);\r\n\r\n        //Serenity.TabsExtensions.setDisabled(this.tabs, 'Product Movement', this.isNewOrDeleted());\r\n        //Serenity.TabsExtensions.setDisabled(this.tabs, 'Wares Movement', this.isNewOrDeleted());\r\n\r\n        //this.ProductMoveGrid.counterpartyId = entity.CounterpartyId;\r\n        //this.WaresMoveGrid.counterpartyId = entity.CounterpartyId;\r\n    }\r\n\r\n    onSaveSuccess(response) {\r\n        super.onSaveSuccess(response);\r\n\r\n        reloadLookup('Store.Counterparties');\r\n    }\r\n\r\n    getTemplate() {\r\n        return `<div id=\"~_Tabs\" class=\"s-DialogContent\">\r\n    <ul>\r\n        <li><a href=\"#~_TabInfo\"><span>{{text:\"Db.Store.Counterparties.EntitySingular\"}}</span></a></li>\r\n        <li><a href=\"#~_TabNotes\"><span>{{text:\"Db.Store.Notes.EntityPlural\"}}</span></a></li>\r\n    </ul>\r\n    <div id=\"~_TabInfo\" class=\"tab-pane s-TabInfo\">\r\n        <div id=\"~_Toolbar\" class=\"s-DialogToolbar\">\r\n        </div>\r\n        <div class=\"s-Form\">\r\n            <form id=\"~_Form\" action=\"\">\r\n                <div class=\"fieldset ui-widget ui-widget-content ui-corner-all\">\r\n                    <div id=\"~_PropertyGrid\"></div>\r\n                    <div class=\"clear\"></div>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    </div>\r\n    <div id=\"~_TabNotes\" class=\"tab-pane s-TabNotes\">\r\n    </div>\r\n</div>`;\r\n\r\n    }\r\n\r\n}", "\uFEFFimport { fieldsProxy } from \"@serenity-is/corelib/q\";\r\n\r\nexport interface WaresLangRow {\r\n    Id?: number;\r\n    WaresId?: number;\r\n    LanguageId?: number;\r\n    WaresName?: string;\r\n    Description?: string;\r\n}\r\n\r\nexport abstract class WaresLangRow {\r\n    static readonly idProperty = 'Id';\r\n    static readonly nameProperty = 'WaresName';\r\n    static readonly localTextPrefix = 'Store.WaresLang';\r\n    static readonly deletePermission = 'Store:General';\r\n    static readonly insertPermission = 'Store:General';\r\n    static readonly readPermission = 'Store:General';\r\n    static readonly updatePermission = 'Store:General';\r\n\r\n    static readonly Fields = fieldsProxy<WaresLangRow>();\r\n}\r\n", "\uFEFFimport { SaveRequest, SaveResponse, DeleteRequest, DeleteResponse, RetrieveRequest, RetrieveResponse, ListRequest, ListResponse } from \"@serenity-is/corelib\";\r\nimport { WaresLangRow } from \"./WaresLangRow\";\r\nimport { ServiceOptions, serviceRequest } from \"@serenity-is/corelib/q\";\r\n\r\nexport namespace WaresLangService {\r\n    export const baseUrl = 'Store/WaresLang';\r\n\r\n    export declare function Create(request: SaveRequest<WaresLangRow>, onSuccess?: (response: SaveResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\r\n    export declare function Update(request: SaveRequest<WaresLangRow>, onSuccess?: (response: SaveResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\r\n    export declare function Delete(request: DeleteRequest, onSuccess?: (response: DeleteResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\r\n    export declare function Retrieve(request: RetrieveRequest, onSuccess?: (response: RetrieveResponse<WaresLangRow>) => void, opt?: ServiceOptions<any>): JQueryXHR;\r\n    export declare function List(request: ListRequest, onSuccess?: (response: ListResponse<WaresLangRow>) => void, opt?: ServiceOptions<any>): JQueryXHR;\r\n\r\n    export const Methods = {\r\n        Create: \"Store/WaresLang/Create\",\r\n        Update: \"Store/WaresLang/Update\",\r\n        Delete: \"Store/WaresLang/Delete\",\r\n        Retrieve: \"Store/WaresLang/Retrieve\",\r\n        List: \"Store/WaresLang/List\"\r\n    } as const;\r\n\r\n    [\r\n        'Create', \r\n        'Update', \r\n        'Delete', \r\n        'Retrieve', \r\n        'List'\r\n    ].forEach(x => {\r\n        (<any>WaresLangService)[x] = function (r, s, o) {\r\n            return serviceRequest(baseUrl + '/' + x, r, s, o);\r\n        };\r\n    });\r\n}\r\n", "\uFEFFimport { getLookup, getLookupAsync, fieldsProxy } from \"@serenity-is/corelib/q\";\r\n\r\nexport interface WaresRow {\r\n    WaresId?: number;\r\n    WaresCode?: string;\r\n    WaresBarcode?: string;\r\n    WaresLabel?: string;\r\n    WaresName?: string;\r\n    WaresImage?: string;\r\n    CounterpartyId?: string;\r\n    CategoryId?: number;\r\n    MeasureId?: number;\r\n    QuantityPerUnit?: number;\r\n    UnitPrice?: number;\r\n    UnitsInStock?: number;\r\n    UnitsOnOrder?: number;\r\n    Discontinued?: boolean;\r\n    AccountId?: number;\r\n    IsActive?: number;\r\n    TenantId?: number;\r\n    CounterpartyCompanyName?: string;\r\n    CounterpartyContactName?: string;\r\n    CounterpartyContactTitle?: string;\r\n    CounterpartyAddress?: string;\r\n    CounterpartyCity?: string;\r\n    CounterpartyRegion?: string;\r\n    CounterpartyPostalCode?: string;\r\n    CounterpartyCountry?: string;\r\n    CounterpartyPhone?: string;\r\n    Type?: number;\r\n    CategoryCategoryName?: string;\r\n    CategoryDescription?: string;\r\n    MeasureName?: string;\r\n    InsertUserId?: number;\r\n    InsertDate?: string;\r\n    UpdateUserId?: number;\r\n    UpdateDate?: string;\r\n}\r\n\r\nexport abstract class WaresRow {\r\n    static readonly idProperty = 'WaresId';\r\n    static readonly isActiveProperty = 'IsActive';\r\n    static readonly nameProperty = 'WaresName';\r\n    static readonly localTextPrefix = 'Store.Wares';\r\n    static readonly lookupKey = 'Store.Wares';\r\n\r\n    /** @deprecated use getLookupAsync instead */\r\n    static getLookup() { return getLookup<WaresRow>('Store.Wares') }\r\n    static async getLookupAsync() { return getLookupAsync<WaresRow>('Store.Wares') }\r\n\r\n    static readonly deletePermission = 'Store:Wares:Delete';\r\n    static readonly insertPermission = 'Store:Wares:Modify';\r\n    static readonly readPermission = 'Store:Wares:View';\r\n    static readonly updatePermission = 'Store:Wares:Modify';\r\n\r\n    static readonly Fields = fieldsProxy<WaresRow>();\r\n}\r\n", "\uFEFFimport { SaveRequest, SaveResponse, DeleteRequest, DeleteResponse, RetrieveRequest, RetrieveResponse, ListRequest, ListResponse } from \"@serenity-is/corelib\";\r\nimport { WaresRow } from \"./WaresRow\";\r\nimport { ServiceOptions, serviceRequest } from \"@serenity-is/corelib/q\";\r\n\r\nexport namespace WaresService {\r\n    export const baseUrl = 'Store/Wares';\r\n\r\n    export declare function Create(request: SaveRequest<WaresRow>, onSuccess?: (response: SaveResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\r\n    export declare function Update(request: SaveRequest<WaresRow>, onSuccess?: (response: SaveResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\r\n    export declare function Delete(request: DeleteRequest, onSuccess?: (response: DeleteResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\r\n    export declare function Retrieve(request: RetrieveRequest, onSuccess?: (response: RetrieveResponse<WaresRow>) => void, opt?: ServiceOptions<any>): JQueryXHR;\r\n    export declare function List(request: ListRequest, onSuccess?: (response: ListResponse<WaresRow>) => void, opt?: ServiceOptions<any>): JQueryXHR;\r\n\r\n    export const Methods = {\r\n        Create: \"Store/Wares/Create\",\r\n        Update: \"Store/Wares/Update\",\r\n        Delete: \"Store/Wares/Delete\",\r\n        Retrieve: \"Store/Wares/Retrieve\",\r\n        List: \"Store/Wares/List\"\r\n    } as const;\r\n\r\n    [\r\n        'Create', \r\n        'Update', \r\n        'Delete', \r\n        'Retrieve', \r\n        'List'\r\n    ].forEach(x => {\r\n        (<any>WaresService)[x] = function (r, s, o) {\r\n            return serviceRequest(baseUrl + '/' + x, r, s, o);\r\n        };\r\n    });\r\n}\r\n"],
  "mappings": "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",
  "names": ["require_extensions", "__commonJSMin", "exports", "module", "CategoriesColumns", "__name", "import_corelib", "import_corelib", "import_q", "_CategoriesExcelImportForm", "prefix", "w0", "CategoriesExcelImportForm", "__name", "import_corelib", "import_q", "_CategoriesForm", "prefix", "w0", "w1", "CategoriesForm", "__name", "import_q", "CategoriesLangRow", "__name", "import_q", "CategoriesLangService", "x", "r", "s", "o", "import_q", "CategoriesRow", "__async", "__name", "import_q", "CategoriesService", "x", "r", "s", "o", "CategoriesTypeColumns", "__name", "import_corelib", "import_q", "_CategoriesTypeForm", "prefix", "w0", "w1", "CategoriesTypeForm", "__name", "import_q", "CategoriesTypeRow", "__async", "__name", "import_q", "CategoriesTypeService", "x", "r", "s", "o", "import_corelib", "EmployeeListFormatter", "ctx", "idList", "byId", "EmployeesRow", "z", "x", "__name", "__decorateClass", "CounterpartiesColumns", "__name", "import_corelib", "import_corelib", "import_q", "PhoneEditor", "input", "e", "value", "phone", "isMultiple", "valid", "i", "c", "format", "phones", "result", "x", "s", "check", "anyValid", "$t1", "__name", "__decorateClass", "import_corelib", "import_q", "import_corelib", "import_q", "NotesDialog", "value", "__name", "__decorateClass", "NotesEditor", "div", "e", "noteList", "index", "t1", "item", "li", "dlg", "NotesDialog", "text", "old", "value", "prop", "target", "source", "__name", "__decorateClass", "import_q", "_CounterpartiesForm", "prefix", "w0", "w1", "w2", "PhoneEditor", "w3", "NotesEditor", "w4", "w5", "w6", "CounterpartiesForm", "__name", "import_q", "CounterpartiesRow", "__async", "__name", "import_q", "CounterpartiesService", "x", "r", "s", "o", "import_q", "CounterpartyDetailsRow", "__name", "import_q", "CounterpartyRepresentativesRow", "__name", "DocumentTypeColumns", "__name", "import_corelib", "import_q", "_DocumentTypeForm", "prefix", "w0", "DocumentTypeForm", "__name", "import_q", "DocumentTypeRow", "__async", "__name", "import_q", "DocumentTypeService", "x", "r", "s", "o", "import_q", "EmployeesRow", "__async", "__name", "import_corelib", "Gender", "MeasuresColumns", "__name", "import_corelib", "import_q", "_MeasuresForm", "prefix", "w0", "MeasuresForm", "__name", "import_q", "MeasuresRow", "__async", "__name", "import_q", "MeasuresService", "x", "r", "s", "o", "import_q", "NotesRow", "__name", "import_q", "NotesService", "x", "r", "s", "o", "OperationTypeColumns", "__name", "import_corelib", "import_q", "_OperationTypeForm", "prefix", "w0", "w1", "OperationTypeForm", "__name", "import_q", "OperationTypeRow", "__async", "__name", "import_q", "OperationTypeService", "x", "r", "s", "o", "PermissionKeys", "Categories", "CategoriesType", "Shops", "DocumentType", "Measures", "OperationType", "Counterparties", "Wares", "Product", "ProductDetailsColumns", "__name", "import_corelib", "WaresDialog", "WaresForm", "WaresRow", "WaresService", "__name", "__decorateClass", "import_corelib", "import_q", "_ProductDetailsForm", "prefix", "w0", "w1", "ProductDetailsForm", "__name", "import_q", "ProductDetailsRow", "__name", "import_q", "ProductDetailsService", "x", "r", "s", "o", "import_q", "ProductLangRow", "__name", "import_q", "ProductLangService", "x", "r", "s", "o", "ProductsColumns", "__name", "import_corelib", "CategoriesDialog", "CategoriesForm", "CategoriesRow", "CategoriesService", "__name", "__decorateClass", "import_corelib", "import_corelib", "MeasuresDialog", "MeasuresForm", "MeasuresRow", "MeasuresService", "__name", "__decorateClass", "import_corelib", "import_q", "import_extensions", "import_corelib", "import_q", "import_extensions", "ProductDetailsDialog", "ProductDetailsForm", "itemID", "WaresRow", "price", "quantity", "quanprod", "discount", "ProductDetailsRow", "__name", "__decorateClass", "ProductDetailsEditor", "ProductDetailsColumns", "ProductDetailsDialog", "ProductDetailsRow", "container", "WaresRow", "row", "id", "sameWares", "x", "__name", "__decorateClass", "import_q", "_ProductsForm", "prefix", "w0", "w1", "w2", "w3", "w4", "w5", "ProductDetailsEditor", "w6", "ProductsForm", "__name", "import_q", "ProductsLogRow", "__name", "import_q", "ProductsRow", "__async", "__name", "import_q", "ProductsService", "x", "r", "s", "o", "ShippersColumns", "__name", "import_corelib", "import_q", "_ShippersForm", "prefix", "w0", "ShippersForm", "__name", "import_q", "ShippersRow", "__async", "__name", "import_q", "ShippersService", "x", "r", "s", "o", "ShopsColumns", "__name", "import_corelib", "import_q", "_ShopsForm", "prefix", "w0", "ShopsForm", "__name", "import_q", "ShopsRow", "__async", "__name", "import_q", "ShopsService", "x", "r", "s", "o", "WaresColumns", "__name", "import_corelib", "import_corelib", "import_q", "import_extensions", "CounterpartiesDialog", "CounterpartiesForm", "CounterpartiesRow", "CounterpartiesService", "data", "entity", "response", "__name", "__decorateClass", "import_q", "_WaresForm", "prefix", "w0", "w1", "w2", "w3", "w4", "w5", "WaresForm", "__name", "import_q", "WaresLangRow", "__name", "import_q", "WaresLangService", "x", "r", "s", "o", "import_q", "WaresRow", "__async", "__name", "import_q", "WaresService", "x", "r", "s", "o", "CategoriesTypeDialog", "CategoriesTypeForm", "CategoriesTypeRow", "CategoriesTypeService", "__name", "__decorateClass"]
}
