{
  "version": 3,
  "sources": ["../../../../../Modules/Store/Measures/MeasuresPage.ts", "../../../../../Modules/Store/Measures/MeasuresGrid.ts", "../../../../../Modules/Store/Measures/MeasuresDialog.ts"],
  "sourcesContent": ["\uFEFFimport { initFullHeightGridPage } from '@serenity-is/corelib/q';\r\nimport { MeasuresGrid } from './MeasuresGrid';\r\n\r\n$(function() {\r\n    initFullHeightGridPage(new MeasuresGrid($('#GridDiv')).element);\r\n});", "import { Decorators, EntityGrid } from '@serenity-is/corelib';\r\nimport { MeasuresColumns, MeasuresRow, MeasuresService } from '../../ServerTypes/Store';\r\nimport { MeasuresDialog } from './MeasuresDialog';\r\n\r\n@Decorators.registerClass('Store.Store.MeasuresGrid')\r\nexport class MeasuresGrid extends EntityGrid<MeasuresRow, any> {\r\n    protected getColumnsKey() { return MeasuresColumns.columnsKey; }\r\n    protected getDialogType() { return MeasuresDialog; }\r\n    protected getIdProperty() { return MeasuresRow.idProperty; }\r\n    protected getInsertPermission() { return MeasuresRow.insertPermission; }\r\n    protected getLocalTextPrefix() { return MeasuresRow.localTextPrefix; }\r\n    protected getService() { return MeasuresService.baseUrl; }\r\n\r\n    constructor(container: JQuery) {\r\n        super(container);\r\n    }\n\n    protected getDefaultSortBy() {\r\n        return [MeasuresRow.Fields.MeasureId];\r\n    }\r\n}", "\uFEFFimport { Decorators, EntityDialog } from '@serenity-is/corelib';\r\nimport { MeasuresForm, MeasuresRow, MeasuresService } from '../../ServerTypes/Store';\r\n\r\n@Decorators.registerClass('Store.Store.MeasuresDialog')\r\nexport class MeasuresDialog extends EntityDialog<MeasuresRow, any> {\r\n    protected getFormKey() { return MeasuresForm.formKey; }\r\n    protected getIdProperty() { return MeasuresRow.idProperty; }\r\n    protected getLocalTextPrefix() { return MeasuresRow.localTextPrefix; }\r\n    protected getNameProperty() { return MeasuresRow.nameProperty; }\r\n    protected getService() { return MeasuresService.baseUrl; }\r\n    protected getDeletePermission() { return MeasuresRow.deletePermission; }\r\n    protected getInsertPermission() { return MeasuresRow.insertPermission; }\r\n    protected getUpdatePermission() { return MeasuresRow.updatePermission; }\r\n\r\n    protected form = new MeasuresForm(this.idPrefix);\r\n}"],
  "mappings": "+JAAC,IAAAA,EAAuC,SCAxC,IAAAC,EAAuC,SCAtC,IAAAC,EAAyC,SAInC,IAAMC,EAAN,cAA6B,cAA+B,CAA5D,kCAUH,KAAU,KAAO,IAAIC,EAAa,KAAK,QAAQ,EATrC,YAAa,CAAE,OAAOA,EAAa,OAAS,CAC5C,eAAgB,CAAE,OAAOC,EAAY,UAAY,CACjD,oBAAqB,CAAE,OAAOA,EAAY,eAAiB,CAC3D,iBAAkB,CAAE,OAAOA,EAAY,YAAc,CACrD,YAAa,CAAE,OAAOC,EAAgB,OAAS,CAC/C,qBAAsB,CAAE,OAAOD,EAAY,gBAAkB,CAC7D,qBAAsB,CAAE,OAAOA,EAAY,gBAAkB,CAC7D,qBAAsB,CAAE,OAAOA,EAAY,gBAAkB,CAG3E,EAXaE,EAAAJ,EAAA,kBAAAA,EAANK,EAAA,CADN,aAAW,cAAc,4BAA4B,GACzCL,GDCN,IAAMM,EAAN,cAA2B,YAA6B,CACjD,eAAgB,CAAE,OAAOC,EAAgB,UAAY,CACrD,eAAgB,CAAE,OAAOC,CAAgB,CACzC,eAAgB,CAAE,OAAOC,EAAY,UAAY,CACjD,qBAAsB,CAAE,OAAOA,EAAY,gBAAkB,CAC7D,oBAAqB,CAAE,OAAOA,EAAY,eAAiB,CAC3D,YAAa,CAAE,OAAOC,EAAgB,OAAS,CAEzD,YAAYC,EAAmB,CAC3B,MAAMA,CAAS,CACnB,CAEU,kBAAmB,CACzB,MAAO,CAACF,EAAY,OAAO,SAAS,CACxC,CACJ,EAfaG,EAAAN,EAAA,gBAAAA,EAANO,EAAA,CADN,aAAW,cAAc,0BAA0B,GACvCP,GDFb,EAAE,UAAW,IACT,0BAAuB,IAAIQ,EAAa,EAAE,UAAU,CAAC,EAAE,OAAO,CAClE,CAAC",
  "names": ["import_q", "import_corelib", "import_corelib", "MeasuresDialog", "MeasuresForm", "MeasuresRow", "MeasuresService", "__name", "__decorateClass", "MeasuresGrid", "MeasuresColumns", "MeasuresDialog", "MeasuresRow", "MeasuresService", "container", "__name", "__decorateClass", "MeasuresGrid"]
}
