{
  "version": 3,
  "sources": ["../../../../../Modules/Store/OperationType/OperationTypePage.ts", "../../../../../Modules/Store/OperationType/OperationTypeGrid.ts", "../../../../../Modules/Store/OperationType/OperationTypeDialog.ts"],
  "sourcesContent": ["\uFEFFimport { initFullHeightGridPage } from '@serenity-is/corelib/q';\r\nimport { OperationTypeGrid } from './OperationTypeGrid';\r\n\r\n$(function() {\r\n    initFullHeightGridPage(new OperationTypeGrid($('#GridDiv')).element);\r\n});", "import { Decorators, EntityGrid } from '@serenity-is/corelib';\r\nimport { OperationTypeColumns, OperationTypeRow, OperationTypeService } from '../../ServerTypes/Store';\r\nimport { OperationTypeDialog } from './OperationTypeDialog';\r\n\r\n@Decorators.registerClass('Store.Store.OperationTypeGrid')\r\nexport class OperationTypeGrid extends EntityGrid<OperationTypeRow, any> {\r\n    protected getColumnsKey() { return OperationTypeColumns.columnsKey; }\r\n    protected getDialogType() { return OperationTypeDialog; }\r\n    protected getIdProperty() { return OperationTypeRow.idProperty; }\r\n    protected getInsertPermission() { return OperationTypeRow.insertPermission; }\r\n    protected getLocalTextPrefix() { return OperationTypeRow.localTextPrefix; }\r\n    protected getService() { return OperationTypeService.baseUrl; }\r\n\r\n    constructor(container: JQuery) {\r\n        super(container);\r\n    }\n\n    protected getDefaultSortBy() {\r\n        return [OperationTypeRow.Fields.OpCode];\r\n    }\r\n}", "\uFEFFimport { Decorators, EntityDialog } from '@serenity-is/corelib';\r\nimport { OperationTypeForm, OperationTypeRow, OperationTypeService } from '../../ServerTypes/Store';\r\n\r\n@Decorators.registerClass('Store.Store.OperationTypeDialog')\r\nexport class OperationTypeDialog extends EntityDialog<OperationTypeRow, any> {\r\n    protected getFormKey() { return OperationTypeForm.formKey; }\r\n    protected getIdProperty() { return OperationTypeRow.idProperty; }\r\n    protected getLocalTextPrefix() { return OperationTypeRow.localTextPrefix; }\r\n    protected getNameProperty() { return OperationTypeRow.nameProperty; }\r\n    protected getService() { return OperationTypeService.baseUrl; }\r\n    protected getDeletePermission() { return OperationTypeRow.deletePermission; }\r\n    protected getInsertPermission() { return OperationTypeRow.insertPermission; }\r\n    protected getUpdatePermission() { return OperationTypeRow.updatePermission; }\r\n\r\n    protected form = new OperationTypeForm(this.idPrefix);\r\n}"],
  "mappings": "+JAAC,IAAAA,EAAuC,SCAxC,IAAAC,EAAuC,SCAtC,IAAAC,EAAyC,SAInC,IAAMC,EAAN,cAAkC,cAAoC,CAAtE,kCAUH,KAAU,KAAO,IAAIC,EAAkB,KAAK,QAAQ,EAT1C,YAAa,CAAE,OAAOA,EAAkB,OAAS,CACjD,eAAgB,CAAE,OAAOC,EAAiB,UAAY,CACtD,oBAAqB,CAAE,OAAOA,EAAiB,eAAiB,CAChE,iBAAkB,CAAE,OAAOA,EAAiB,YAAc,CAC1D,YAAa,CAAE,OAAOC,EAAqB,OAAS,CACpD,qBAAsB,CAAE,OAAOD,EAAiB,gBAAkB,CAClE,qBAAsB,CAAE,OAAOA,EAAiB,gBAAkB,CAClE,qBAAsB,CAAE,OAAOA,EAAiB,gBAAkB,CAGhF,EAXaE,EAAAJ,EAAA,uBAAAA,EAANK,EAAA,CADN,aAAW,cAAc,iCAAiC,GAC9CL,GDCN,IAAMM,EAAN,cAAgC,YAAkC,CAC3D,eAAgB,CAAE,OAAOC,EAAqB,UAAY,CAC1D,eAAgB,CAAE,OAAOC,CAAqB,CAC9C,eAAgB,CAAE,OAAOC,EAAiB,UAAY,CACtD,qBAAsB,CAAE,OAAOA,EAAiB,gBAAkB,CAClE,oBAAqB,CAAE,OAAOA,EAAiB,eAAiB,CAChE,YAAa,CAAE,OAAOC,EAAqB,OAAS,CAE9D,YAAYC,EAAmB,CAC3B,MAAMA,CAAS,CACnB,CAEU,kBAAmB,CACzB,MAAO,CAACF,EAAiB,OAAO,MAAM,CAC1C,CACJ,EAfaG,EAAAN,EAAA,qBAAAA,EAANO,EAAA,CADN,aAAW,cAAc,+BAA+B,GAC5CP,GDFb,EAAE,UAAW,IACT,0BAAuB,IAAIQ,EAAkB,EAAE,UAAU,CAAC,EAAE,OAAO,CACvE,CAAC",
  "names": ["import_q", "import_corelib", "import_corelib", "OperationTypeDialog", "OperationTypeForm", "OperationTypeRow", "OperationTypeService", "__name", "__decorateClass", "OperationTypeGrid", "OperationTypeColumns", "OperationTypeDialog", "OperationTypeRow", "OperationTypeService", "container", "__name", "__decorateClass", "OperationTypeGrid"]
}
