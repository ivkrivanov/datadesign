<Project Sdk="Microsoft.NET.Sdk.Web">
  <PropertyGroup>
    <TargetFramework>net5.0</TargetFramework>
    <PreserveCompilationContext>true</PreserveCompilationContext>
    <AssemblyName>Store.Web</AssemblyName>
    <TypeScriptCompileBlocked>true</TypeScriptCompileBlocked>
    <SerenitySrc>..\..\Serenity\src\</SerenitySrc>
    <DotNetSergen>dotnet sergen</DotNetSergen>
    <DotNetSergenDir>$(SerenitySrc)Serenity.Net.CodeGenerator\bin"</DotNetSergenDir>
    <DotNetSergen Condition="Exists('$(DotNetSergenDir)sergen')">$(DotNetSergenDir)sergen</DotNetSergen>
    <DotNetSergen Condition="Exists('$(DotNetSergenDir)sergen.exe')">$(DotNetSergenDir)sergen.exe</DotNetSergen>
    <CommonSrc>..\..\common-features\src\</CommonSrc>
    <ProSrc>..\..\pro-features\src\</ProSrc>
    <TypeScriptToolsVersion>Latest</TypeScriptToolsVersion>
  </PropertyGroup>
  <ItemGroup>
    <EmbeddedResource Include="Migrations\**\*.sql" Exclude="bin\**;obj\**;**\*.xproj;packages\**;@(EmbeddedResource)" />
    <Compile Remove="Modules\Common\UserPreference\**" />
    <Content Remove="Modules\Common\UserPreference\**" />
    <EmbeddedResource Remove="Modules\Common\UserPreference\**" />
    <None Remove="Modules\Common\UserPreference\**" />
    <TypeScriptCompile Remove="Modules\Common\UserPreference\**" />
    <Compile Remove="Modules\Common\Helpers\PdfExportHelper.cs" />
    <Content Remove="Areas\Store\_ViewImports - Copy.cshtml" />
    <Content Remove="Areas\Store\_ViewStart.cshtml" />
    <None Remove="App_Data\Reporting\wkhtmltopdf.exe" />
    <None Remove="typings\jspdf\jspdf.d.ts" />
    <TypeScriptCompile Remove="Modules\Common\Helpers\DialogUtils.ts" />
    <TypeScriptCompile Remove="Modules\Common\Helpers\ExcelExportHelper.ts" />
    <TypeScriptCompile Remove="Modules\Common\Helpers\GridEditorBase.ts" />
    <TypeScriptCompile Remove="Modules\Common\Helpers\GridEditorDialog.ts" />
    <TypeScriptCompile Remove="Modules\Store\Counterparties\CounterpartiesDialog.ts" />
    <TypeScriptCompile Remove="Modules\Store\Counterparties\CounterpartiesEditor.ts" />
    <TypeScriptCompile Remove="Modules\Store\Counterparties\CounterpartiesGrid.ts" />
    <TypeScriptCompile Remove="Modules\Store\Employees\EmployeesFormatter.ts" />
    <TypeScriptCompile Remove="Modules\Store\Employees\EmployeesListFormatter.ts" />
    <TypeScriptCompile Remove="Modules\Store\Wares\WaresDialog.ts" />
    <TypeScriptCompile Remove="Modules\Store\Wares\WaresExcelImportDialog.ts" />
    <TypeScriptCompile Remove="Modules\Store\Wares\WaresGrid.ts" />
    <Content Include="App_Data\Reporting\wkhtmltopdf.exe" />
    <None Include="Areas\Store\_ViewImports - Copy.cshtml" />
    <None Include="Areas\Store\_ViewStart.cshtml" />
    <None Include="Modules\Common\Reporting\ReportPage.cshtml" />
    <None Include="Modules\Store\CategoriesType\CategoriesTypeIndex.cshtml" />
    <None Include="Modules\Store\Categories\CategoriesIndex.cshtml" />
    <None Include="Modules\Store\DocumentType\DocumentTypeIndex.cshtml" />
    <None Include="Modules\Store\Measures\MeasuresIndex.cshtml" />
    <None Include="Modules\Store\OperationType\OperationTypeIndex.cshtml" />
    <None Include="Modules\Store\ProductDetails\ProductDetailsIndex.cshtml" />
    <None Include="Modules\Store\Products\ProductsIndex.cshtml" />
    <None Include="Modules\Store\Shippers\ShippersIndex.cshtml" />
    <None Include="Modules\Store\Shops\ShopsIndex.cshtml" />
    <None Include="Modules\Store\WaresMovementDetails\WaresMovementDetailsIndex.cshtml" />
    <None Include="Modules\Store\WaresMovement\WaresMovementIndex.cshtml" />
    <None Update="wwwroot\**\*">
      <CopyToPublishDirectory>PreserveNewest</CopyToPublishDirectory>
    </None>
    <None Update="Modules\**\*.Template.html;Modules\**\*.ts.html">
      <CopyToPublishDirectory>PreserveNewest</CopyToPublishDirectory>
    </None>
  </ItemGroup>
  <ItemGroup>
    <PackageReference Include="EPPlus" Version="4.5.3.2" />
    <PackageReference Include="FastMember" Version="1.5.0" />
    <PackageReference Include="FluentMigrator.Runner" Version="3.2.9" />
    <PackageReference Include="Microsoft.AspNetCore.Mvc.NewtonsoftJson" Version="3.1.0" />
    <PackageReference Include="Microsoft.AspNetCore.Mvc.Razor.RuntimeCompilation" Version="3.1.0" />
    <PackageReference Include="Microsoft.Data.Sqlite" Version="3.1.0" />
    <PackageReference Include="Microsoft.TypeScript.MSBuild" Version="3.7.4">
      <PrivateAssets>all</PrivateAssets>
      <IncludeAssets>runtime; build; native; contentfiles; analyzers</IncludeAssets>
    </PackageReference>
    <PackageReference Include="Serenity.Assets" Version="5.2.2" />
    <PackageReference Include="Serenity.Extensions" Version="5.2.2" />
    <PackageReference Include="Serenity.Scripts" Version="5.2.4" />
    <PackageReference Include="Serenity.Net.Web" Version="5.2.4" />
  </ItemGroup>
  <ItemGroup>
    <PackageReference Include="Serenity.Assets" Version="5.2.2" />
    <PackageReference Include="Serenity.Scripts" Version="5.2.4" />
    <PackageReference Include="Serenity.Net.Web" Version="5.2.4" />
  </ItemGroup>
  <ItemGroup>
    <PackageReference Include="Serenity.Extensions" Version="5.2.2" />
  </ItemGroup>
  <ItemGroup>
    <Folder Include="Areas\Store\CategoriesType\" />
    <Folder Include="Areas\Store\Categories\" />
    <Folder Include="node_modules\%40types\" />
  </ItemGroup>
  <Import Project="$(SolutionDir)Serenity\build\submodule.targets" Condition="Exists('$(SolutionDir)Serenity\build\submodule.targets')" />
  <Target Name="CreateInputsOutputs" BeforeTargets="BeforeBuild">
    <CreateItem Include="Modules\**\*.ts;Imports\**\*.ts;tsconfig.json">
      <Output TaskParameter="Include" ItemName="CompileTSCInputs" />
    </CreateItem>
  </Target>
  <Target Name="NpmInstall" BeforeTargets="BeforeBuild" Condition="!Exists('node_modules\@types\jquery\index.d.ts')">
    <Message Text="Installing NPM packages..." Importance="high"></Message>
    <Exec Command="npm install" />
  </Target>
  <Target Name="TransformMvcClientTypes" BeforeTargets="BeforeBuild">
    <Exec Command="dotnet tool restore" ContinueOnError="true" />
    <Exec Command="$(DotNetSergen) restore" ContinueOnError="true" />
    <Exec Command="$(DotNetSergen) mvct" ContinueOnError="true" />
  </Target>
  <Target Name="TransformServerTypings" AfterTargets="AfterBuild">
    <Exec Command="$(DotNetSergen) servertypings" ContinueOnError="true" />
  </Target>
  <Target Name="CompileTSC" AfterTargets="AfterBuild" Inputs="@(CompileTSCInputs)" Outputs="wwwroot\Scripts\site\Store.Web.js">
    <Message Text="Executing TypeScript compiler..." Importance="high"></Message>
    <Exec Command="node &quot;$(TSJavaScriptFile.Replace('build\\..\tools\', 'tools\'))&quot; -p ./tsconfig.json" ContinueOnError="true" />
  </Target>
</Project>
